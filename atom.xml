<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zengshengli775.gitee.io</id>
    <title>Sakura</title>
    <subtitle>我以为18岁之后是19岁，19岁之后是18岁，20岁永远都不会到来 。</subtitle>
    <icon>https://zengshengli775.gitee.io/images/favicon.ico</icon>
    <link href="https://zengshengli775.gitee.io" />
    <author>
      <name>lzs</name>
    </author>
    <updated>2021-09-21T16:00:00.000Z</updated>
    <category term="博客" />
    <category term="主题" />
    <category term="编程" />
    <category term="笔记" />
    <entry>
        <id>https://zengshengli775.gitee.io/2021/09/22/%E5%AD%A6%E4%B9%A0%E5%B7%A5%E5%85%B7/%E4%B8%AD%E6%96%87PDF%E7%94%B5%E5%AD%90%E4%B9%A6%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0%E4%B9%A6%E7%AD%BE/</id>
        <title>中文PDF电子书自动添加书签</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/09/22/%E5%AD%A6%E4%B9%A0%E5%B7%A5%E5%85%B7/%E4%B8%AD%E6%96%87PDF%E7%94%B5%E5%AD%90%E4%B9%A6%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0%E4%B9%A6%E7%AD%BE/"/>
        <content type="html">&lt;h2 id=&#34;1-找到对应书籍的ss号&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-找到对应书籍的ss号&#34;&gt;#&lt;/a&gt; 1. 找到对应书籍的 ss 号&lt;/h2&gt;
&lt;p&gt;首先要登录全国图书馆参考咨询联盟（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW5rLnpoaWh1LmNvbS8/dGFyZ2V0PWh0dHAlM0EvL3d3dy51Y2Rycy5zdXBlcmxpYi5uZXQv&#34;&gt;http://www.ucdrs.superlib.net/&lt;/span&gt;），这里是查找书籍 ss 号的地点。我们将需要这个 ss 号来获取对应制作好的书签。&lt;img data-src=&#34;http://tva1.sinaimg.cn/large/007QGucbly1guphprws0lj60r609yaas02.jpg&#34; alt=&#34;007QGucbly1guphprws0lj60r609yaas02&#34; /&gt;&lt;/p&gt;
&lt;p&gt;检索自己的书籍。这里有一个要注意的点：很多书籍经过了多次印刷，即使是同一个名字，其内容都有些微的不同。为了找到确切唯一的，你手上的 PDF 电子书，请到 PDF 的前几页找到这个 CIP 数据。其中的 ISBN 码，每一本书只有专属的一个。&lt;img data-src=&#34;http://tva1.sinaimg.cn/large/007QGucbly1guphprw9y4j60d803uzki02.jpg&#34; alt=&#34;007QGucbly1guphprw9y4j60d803uzki02&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看，现在检索出来的书就是 PDF 文件对应的那本书了。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tva1.sinaimg.cn/large/007QGucbly1guphpry6lnj60v007lwha02.jpg&#34; alt=&#34;3.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;来找这本书的 ss 号吧～未来获取书签需要提交该码。点击进入该书，在右侧试读，随便点击一个链接，如 “版权页”。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tva1.sinaimg.cn/large/007QGucbly1guphprubl6j608r03omx602.jpg&#34; alt=&#34;007QGucbly1guphprubl6j608r03omx602&#34; /&gt;&lt;/p&gt;
&lt;p&gt;新弹出的网页链接中，就能看到 ss 号了。&lt;img data-src=&#34;http://tva1.sinaimg.cn/large/007QGucbly1guphpruj10j60of02u0t002.jpg&#34; alt=&#34;007QGucbly1guphpruj10j60of02u0t002&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-获取书签信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-获取书签信息&#34;&gt;#&lt;/a&gt; 2. 获取书签信息&lt;/h2&gt;
&lt;p&gt;打开书签获取软件 V0505，输入 ss 号，一键获取。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tva1.sinaimg.cn/large/007QGucbly1guphtt4t37j60f20aiq4d02.jpg&#34; alt=&#34;1.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进入窗体，Ctrl+A、Ctrl+C，全部复制。&lt;/p&gt;
&lt;h2 id=&#34;3-往pdf导入书签信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-往pdf导入书签信息&#34;&gt;#&lt;/a&gt; 3. 往 PDF 导入书签信息&lt;/h2&gt;
&lt;p&gt;打开 PdgCntEditor，使用该软件打开你要编辑的 PDF 文件，直接在窗体中粘贴书签信息，保存。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tva1.sinaimg.cn/large/007QGucbly1guphtt52rrj60kv0cxac502.jpg&#34; alt=&#34;2.jpg&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-检查效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-检查效果&#34;&gt;#&lt;/a&gt; 4. 检查效果&lt;/h2&gt;
&lt;p&gt;打开后，经过检查，实现了内容和页码的一一对应，效果较好。如有错位问题，再进入 PdgCntEditor 中进行相应修改。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://tva1.sinaimg.cn/large/007QGucbly1guphtt5kk4j60ru0cl0wc02.jpg&#34; alt=&#34;3.jpg&#34; /&gt;&lt;/p&gt;
</content>
        <category term="学习工具" scheme="https://zengshengli775.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E5%B7%A5%E5%85%B7/" />
        <category term="PDF" scheme="https://zengshengli775.gitee.io/tags/PDF/" />
        <category term="书签" scheme="https://zengshengli775.gitee.io/tags/%E4%B9%A6%E7%AD%BE/" />
        <updated>2021-09-21T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/09/01/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/</id>
        <title>在线工具</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/09/01/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"/>
        <content type="html">&lt;h2 id=&#34;在线工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在线工具&#34;&gt;#&lt;/a&gt; 在线工具&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy5rYWx2aW5iZy5jbi8=&#34;&gt;Kalvin 在线工具 - 有趣及实用的工具箱&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdXVsbm5rYS5naXRodWIuaW8vQnVsbHNoaXRHZW5lcmF0b3Iv&#34;&gt;狗屁不通文章生成器&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="实用技巧" scheme="https://zengshengli775.gitee.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/" />
        <category term="在线工具" scheme="https://zengshengli775.gitee.io/tags/%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/" />
        <updated>2021-08-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/29/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/Apple%20Music%E4%BD%BF%E7%94%A8/</id>
        <title>Apple Music使用</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/29/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/Apple%20Music%E4%BD%BF%E7%94%A8/"/>
        <content type="html">&lt;h2 id=&#34;apple-music的优点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#apple-music的优点&#34;&gt;#&lt;/a&gt; Apple music 的优点&lt;/h2&gt;
&lt;p&gt;1. 功能简单，无任何广告&lt;/p&gt;
&lt;p&gt;2. 不仅支持 IOS，还支持安卓！&lt;/p&gt;
&lt;p&gt;3. 收费便宜。Apple Music 会员&lt;strong&gt;首次可以免费使用三个月&lt;/strong&gt;，之后是每个月 10 元&lt;/p&gt;
&lt;p&gt;而如果你使用 edu 邮箱验证，则可享受学生价，&lt;strong&gt;每月只要 5 块钱&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;4.&lt;strong&gt;Apple Music 允许用户上传歌曲&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;apple-music上传歌曲&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#apple-music上传歌曲&#34;&gt;#&lt;/a&gt; Apple music 上传歌曲&lt;/h2&gt;
&lt;p&gt;Mac：” 音乐 “&lt;/p&gt;
&lt;p&gt;PC：”iTunes“&lt;/p&gt;
&lt;p&gt;1. 打开音乐 /iTunes－登录 Apple id－点击音乐－歌曲－把需要上传的歌拖到资料库&lt;/p&gt;
&lt;p&gt;2. 选中你要上传的歌右键－添加到资料库&lt;/p&gt;
&lt;h2 id=&#34;迁移网易云qq音乐歌单&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#迁移网易云qq音乐歌单&#34;&gt;#&lt;/a&gt; 迁移网易云 / QQ 音乐歌单&lt;/h2&gt;
&lt;p&gt;1.&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly95eXJjZC5jb20vbjJzLw==&#34;&gt; 迁移 网易云 / QQ 音乐歌单到 Apple Music, Youtube Music, Spotify&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;2. 使用安卓软件 “&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nY3NwLmxhbnpvdWkuY29tL2IwZTg5NWgyYg==&#34;&gt;歌词适配&lt;/span&gt;”，登陆后将网易云 / QQ 音乐歌单中歌曲全部下载，导入 Apple music 资料库。&lt;/p&gt;
&lt;h2 id=&#34;免费下载网易云qq音乐歌曲&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#免费下载网易云qq音乐歌曲&#34;&gt;#&lt;/a&gt; 免费下载网易云 / QQ 音乐歌曲&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nY3NwLmxhbnpvdWkuY29tL2IwZTg5NWgyYg==&#34;&gt;歌词适配&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3kuanNvc29zby5jb20vIy9zZWFyY2g=&#34;&gt;网易云音乐下载&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL211c2ljLnZhaXdhbi5jb20v&#34;&gt;QQ 音乐下载&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL211c2ljLnk0NDQuY24vIy8=&#34;&gt;下歌吧_音乐免费下载_音乐在线试听_无损音乐下载&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="实用技巧" scheme="https://zengshengli775.gitee.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/" />
        <category term="Apple Music" scheme="https://zengshengli775.gitee.io/tags/Apple-Music/" />
        <updated>2021-08-28T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/27/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C++%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
        <title>C++基础知识</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/27/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C++%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
        <content type="html">&lt;h2 id=&#34;1-c初识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-c初识&#34;&gt;#&lt;/a&gt; 1 C++ 初识&lt;/h2&gt;
&lt;h3 id=&#34;11-注释&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-注释&#34;&gt;#&lt;/a&gt; 1.1 注释&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：在代码中加一些说明和解释，方便自己或其他程序员程序员阅读代码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;两种格式&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;单行注释&lt;/strong&gt;： &lt;code&gt;// 描述信息&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;通常放在一行代码的上方，或者一条语句的末尾，&lt;mark&gt;对该行代码说明&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多行注释&lt;/strong&gt;：  &lt;code&gt;/* 描述信息 */&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;通常放在一段代码的上方，&lt;mark&gt;对该段代码做整体说明&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;提示：编译器在编译代码时，会忽略注释的内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;12-变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-变量&#34;&gt;#&lt;/a&gt; 1.2 变量&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：给一段指定的内存空间起名，方便操作这段内存&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;： &lt;code&gt;数据类型 变量名 = 初始值;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;figcaption data-lang=&#34;C++&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;lt;iostream&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;namespace&lt;/span&gt; std&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// 变量的定义&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// 语法：数据类型  变量名 = 初始值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	cout &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;a = &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;pause&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;注意：C++ 在创建变量时，必须给变量一个初始值，否则会报错&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;13-常量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-常量&#34;&gt;#&lt;/a&gt; 1.3  常量&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：用于记录程序中不可更改的数据&lt;/p&gt;
&lt;p&gt;C++ 定义常量两种方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;#define&lt;/strong&gt; 宏常量：  &lt;code&gt;#define 常量名 常量值&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;通常在文件上方定义&lt;/mark&gt;，表示一个常量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;const&lt;/strong&gt; 修饰的变量  &lt;code&gt;const 数据类型 常量名 = 常量值&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;通常在变量定义前加关键字 const&lt;/mark&gt;，修饰该变量为常量，不可修改&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;figcaption data-lang=&#34;C++&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//1、宏常量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;day&lt;/span&gt; &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	cout &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;一周里总共有 &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; day &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34; 天&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;//day = 8;  // 报错，宏常量不可以修改&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;//2、const 修饰变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; month &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	cout &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;一年里总共有 &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; month &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34; 个月份&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;//month = 24; // 报错，常量是不可以修改的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;pause&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;14-关键字&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14-关键字&#34;&gt;#&lt;/a&gt; 1.4 关键字&lt;/h3&gt;
&lt;p&gt;** 作用：** 关键字是 C++ 中预先保留的单词（标识符）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;在定义变量或者常量时候，不要用关键字&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C++ 关键字如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;asm&lt;/th&gt;
&lt;th&gt;do&lt;/th&gt;
&lt;th&gt;if&lt;/th&gt;
&lt;th&gt;return&lt;/th&gt;
&lt;th&gt;typedef&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;auto&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;inline&lt;/td&gt;
&lt;td&gt;short&lt;/td&gt;
&lt;td&gt;typeid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bool&lt;/td&gt;
&lt;td&gt;dynamic_cast&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;signed&lt;/td&gt;
&lt;td&gt;typename&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;break&lt;/td&gt;
&lt;td&gt;else&lt;/td&gt;
&lt;td&gt;long&lt;/td&gt;
&lt;td&gt;sizeof&lt;/td&gt;
&lt;td&gt;union&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;case&lt;/td&gt;
&lt;td&gt;enum&lt;/td&gt;
&lt;td&gt;mutable&lt;/td&gt;
&lt;td&gt;static&lt;/td&gt;
&lt;td&gt;unsigned&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;catch&lt;/td&gt;
&lt;td&gt;explicit&lt;/td&gt;
&lt;td&gt;namespace&lt;/td&gt;
&lt;td&gt;static_cast&lt;/td&gt;
&lt;td&gt;using&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;char&lt;/td&gt;
&lt;td&gt;export&lt;/td&gt;
&lt;td&gt;new&lt;/td&gt;
&lt;td&gt;struct&lt;/td&gt;
&lt;td&gt;virtual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;class&lt;/td&gt;
&lt;td&gt;extern&lt;/td&gt;
&lt;td&gt;operator&lt;/td&gt;
&lt;td&gt;switch&lt;/td&gt;
&lt;td&gt;void&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;const&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;private&lt;/td&gt;
&lt;td&gt;template&lt;/td&gt;
&lt;td&gt;volatile&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;const_cast&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;protected&lt;/td&gt;
&lt;td&gt;this&lt;/td&gt;
&lt;td&gt;wchar_t&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;continue&lt;/td&gt;
&lt;td&gt;for&lt;/td&gt;
&lt;td&gt;public&lt;/td&gt;
&lt;td&gt;throw&lt;/td&gt;
&lt;td&gt;while&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;default&lt;/td&gt;
&lt;td&gt;friend&lt;/td&gt;
&lt;td&gt;register&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;delete&lt;/td&gt;
&lt;td&gt;goto&lt;/td&gt;
&lt;td&gt;reinterpret_cast&lt;/td&gt;
&lt;td&gt;try&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;提示：在给变量或者常量起名称时候，不要用C++得关键字，否则会产生歧义。&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;15-标识符命名规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#15-标识符命名规则&#34;&gt;#&lt;/a&gt; 1.5 标识符命名规则&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：C++ 规定给标识符（变量、常量）命名时，有一套自己的规则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标识符不能是关键字&lt;/li&gt;
&lt;li&gt;标识符只能由字母、数字、下划线组成&lt;/li&gt;
&lt;li&gt;第一个字符必须为字母或下划线&lt;/li&gt;
&lt;li&gt;标识符中字母区分大小写&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;2-数据类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-数据类型&#34;&gt;#&lt;/a&gt; 2 数据类型&lt;/h2&gt;
&lt;p&gt;C++ 规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量分配内存&lt;/p&gt;
&lt;h3 id=&#34;21-整型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-整型&#34;&gt;#&lt;/a&gt; 2.1 整型&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：整型变量表示的是&lt;mark&gt;整数类型&lt;/mark&gt;的数据&lt;/p&gt;
&lt;p&gt;C++ 中能够表示整型的类型有以下几种方式，&lt;strong&gt;区别在于所占内存空间不同&lt;/strong&gt;：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;数据类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;占用空间&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;取值范围&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;short (短整型)&lt;/td&gt;
&lt;td&gt;2 字节&lt;/td&gt;
&lt;td&gt;(-2^15 ~ 2^15-1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int (整型)&lt;/td&gt;
&lt;td&gt;4 字节&lt;/td&gt;
&lt;td&gt;(-2^31 ~ 2^31-1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;long (长整形)&lt;/td&gt;
&lt;td&gt;Windows 为 4 字节，Linux 为 4 字节 (32 位)，8 字节 (64 位)&lt;/td&gt;
&lt;td&gt;(-2^31 ~ 2^31-1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;long long (长长整形)&lt;/td&gt;
&lt;td&gt;8 字节&lt;/td&gt;
&lt;td&gt;(-2^63 ~ 2^63-1)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;22-sizeof关键字&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-sizeof关键字&#34;&gt;#&lt;/a&gt; 2.2 sizeof 关键字&lt;/h3&gt;
&lt;p&gt;** 作用：** 利用 sizeof 关键字可以&lt;mark&gt;统计数据类型所占内存大小&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;  &lt;code&gt;sizeof( 数据类型 / 变量)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;

	cout &amp;lt;&amp;lt; &amp;quot;short 类型所占内存空间为： &amp;quot; &amp;lt;&amp;lt; sizeof(short) &amp;lt;&amp;lt; endl;

	cout &amp;lt;&amp;lt; &amp;quot;int 类型所占内存空间为： &amp;quot; &amp;lt;&amp;lt; sizeof(int) &amp;lt;&amp;lt; endl;

	cout &amp;lt;&amp;lt; &amp;quot;long 类型所占内存空间为： &amp;quot; &amp;lt;&amp;lt; sizeof(long) &amp;lt;&amp;lt; endl;

	cout &amp;lt;&amp;lt; &amp;quot;long long 类型所占内存空间为： &amp;quot; &amp;lt;&amp;lt; sizeof(long long) &amp;lt;&amp;lt; endl;

	system(&amp;quot;pause&amp;quot;);

	return 0;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;整型结论&lt;/strong&gt;：&lt;mark&gt;short &amp;lt; int &amp;lt;= long &amp;lt;= long long&lt;/mark&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;23-实型浮点型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23-实型浮点型&#34;&gt;#&lt;/a&gt; 2.3 实型（浮点型）&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：用于&lt;mark&gt;表示小数&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;浮点型变量分为两种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单精度 float&lt;/li&gt;
&lt;li&gt;双精度 double&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;两者的&lt;strong&gt;区别&lt;/strong&gt;在于表示的有效数字范围不同。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;数据类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;占用空间&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;有效数字范围&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;4 字节&lt;/td&gt;
&lt;td&gt;7 位有效数字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;8 字节&lt;/td&gt;
&lt;td&gt;15～16 位有效数字&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;

	float f1 = 3.14f;
	double d1 = 3.14;

	cout &amp;lt;&amp;lt; f1 &amp;lt;&amp;lt; endl;
	cout &amp;lt;&amp;lt; d1&amp;lt;&amp;lt; endl;

	cout &amp;lt;&amp;lt; &amp;quot;float  sizeof = &amp;quot; &amp;lt;&amp;lt; sizeof(f1) &amp;lt;&amp;lt; endl;
	cout &amp;lt;&amp;lt; &amp;quot;double sizeof = &amp;quot; &amp;lt;&amp;lt; sizeof(d1) &amp;lt;&amp;lt; endl;

	//科学计数法
	float f2 = 3e2; // 3 * 10 ^ 2 
	cout &amp;lt;&amp;lt; &amp;quot;f2 = &amp;quot; &amp;lt;&amp;lt; f2 &amp;lt;&amp;lt; endl;

	float f3 = 3e-2;  // 3 * 0.1 ^ 2
	cout &amp;lt;&amp;lt; &amp;quot;f3 = &amp;quot; &amp;lt;&amp;lt; f3 &amp;lt;&amp;lt; endl;

	system(&amp;quot;pause&amp;quot;);

	return 0;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;24-字符型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#24-字符型&#34;&gt;#&lt;/a&gt; 2.4 字符型&lt;/h3&gt;
&lt;p&gt;** 作用：** 字符型变量用于显示单个字符&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt; &lt;code&gt;char ch = &#39;a&#39;;&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意 1：在显示字符型变量时，用单引号将字符括起来，不要用双引号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;注意 2：单引号内只能有一个字符，不可以是字符串&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;C 和 C++ 中字符型变量只占用&lt;mark&gt; 1 个字节&lt;/mark&gt;。&lt;/li&gt;
&lt;li&gt;字符型变量并不是把字符本身放到内存中存储，而是将对应的 ASCII 编码放入到存储单元&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;
	
	char ch = &#39;a&#39;;
	cout &amp;lt;&amp;lt; ch &amp;lt;&amp;lt; endl;
	cout &amp;lt;&amp;lt; sizeof(char) &amp;lt;&amp;lt; endl;

	//ch = &amp;quot;abcde&amp;quot;; //错误，不可以用双引号
	//ch = &#39;abcde&#39;; //错误，单引号内只能引用一个字符

	cout &amp;lt;&amp;lt; (int)ch &amp;lt;&amp;lt; endl;  //查看字符a对应的ASCII码
	ch = 97; //可以直接用ASCII给字符型变量赋值
	cout &amp;lt;&amp;lt; ch &amp;lt;&amp;lt; endl;

	system(&amp;quot;pause&amp;quot;);

	return 0;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ASCII 码表格：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;ASCII&lt;/strong&gt; 值&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;控制字符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;ASCII&lt;/strong&gt; 值&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;字符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;ASCII&lt;/strong&gt; 值&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;字符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;ASCII&lt;/strong&gt; 值&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;字符&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;NUT&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;(space)&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;96&lt;/td&gt;
&lt;td&gt;、&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;SOH&lt;/td&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;!&lt;/td&gt;
&lt;td&gt;65&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;97&lt;/td&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;STX&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;&amp;quot;&lt;/td&gt;
&lt;td&gt;66&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;98&lt;/td&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;ETX&lt;/td&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;67&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;EOT&lt;/td&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;$&lt;/td&gt;
&lt;td&gt;68&lt;/td&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;ENQ&lt;/td&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td&gt;69&lt;/td&gt;
&lt;td&gt;E&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;e&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;ACK&lt;/td&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt;&amp;amp;&lt;/td&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;BEL&lt;/td&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;,&lt;/td&gt;
&lt;td&gt;71&lt;/td&gt;
&lt;td&gt;G&lt;/td&gt;
&lt;td&gt;103&lt;/td&gt;
&lt;td&gt;g&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;BS&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;(&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;104&lt;/td&gt;
&lt;td&gt;h&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;HT&lt;/td&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;td&gt;)&lt;/td&gt;
&lt;td&gt;73&lt;/td&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;105&lt;/td&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;LF&lt;/td&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;td&gt;J&lt;/td&gt;
&lt;td&gt;106&lt;/td&gt;
&lt;td&gt;j&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;VT&lt;/td&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;75&lt;/td&gt;
&lt;td&gt;K&lt;/td&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;td&gt;k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;FF&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;,&lt;/td&gt;
&lt;td&gt;76&lt;/td&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;td&gt;108&lt;/td&gt;
&lt;td&gt;l&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;CR&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;td&gt;109&lt;/td&gt;
&lt;td&gt;m&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;SO&lt;/td&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;td&gt;n&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;SI&lt;/td&gt;
&lt;td&gt;47&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;79&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;td&gt;111&lt;/td&gt;
&lt;td&gt;o&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;DLE&lt;/td&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;112&lt;/td&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;DCI&lt;/td&gt;
&lt;td&gt;49&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;81&lt;/td&gt;
&lt;td&gt;Q&lt;/td&gt;
&lt;td&gt;113&lt;/td&gt;
&lt;td&gt;q&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;DC2&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;82&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;114&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;DC3&lt;/td&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;83&lt;/td&gt;
&lt;td&gt;S&lt;/td&gt;
&lt;td&gt;115&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;DC4&lt;/td&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;84&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;116&lt;/td&gt;
&lt;td&gt;t&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;NAK&lt;/td&gt;
&lt;td&gt;53&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;85&lt;/td&gt;
&lt;td&gt;U&lt;/td&gt;
&lt;td&gt;117&lt;/td&gt;
&lt;td&gt;u&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;SYN&lt;/td&gt;
&lt;td&gt;54&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;86&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;118&lt;/td&gt;
&lt;td&gt;v&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;TB&lt;/td&gt;
&lt;td&gt;55&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;87&lt;/td&gt;
&lt;td&gt;W&lt;/td&gt;
&lt;td&gt;119&lt;/td&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;CAN&lt;/td&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;88&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;120&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;EM&lt;/td&gt;
&lt;td&gt;57&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;89&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;121&lt;/td&gt;
&lt;td&gt;y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;SUB&lt;/td&gt;
&lt;td&gt;58&lt;/td&gt;
&lt;td&gt;:&lt;/td&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;Z&lt;/td&gt;
&lt;td&gt;122&lt;/td&gt;
&lt;td&gt;z&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;ESC&lt;/td&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;;&lt;/td&gt;
&lt;td&gt;91&lt;/td&gt;
&lt;td&gt;[&lt;/td&gt;
&lt;td&gt;123&lt;/td&gt;
&lt;td&gt;{&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;FS&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;92&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;124&lt;/td&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;GS&lt;/td&gt;
&lt;td&gt;61&lt;/td&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;93&lt;/td&gt;
&lt;td&gt;]&lt;/td&gt;
&lt;td&gt;125&lt;/td&gt;
&lt;td&gt;}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;RS&lt;/td&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;94&lt;/td&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;126&lt;/td&gt;
&lt;td&gt;`        |&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;US&lt;/td&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;95&lt;/td&gt;
&lt;td&gt;_&lt;/td&gt;
&lt;td&gt;127&lt;/td&gt;
&lt;td&gt;DEL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;ASCII 码大致由以下&lt;strong&gt;两部分组&lt;/strong&gt;成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ASCII 非打印控制字符： ASCII 表上的数字 &lt;strong&gt;0-31&lt;/strong&gt; 分配给了控制字符，用于控制像打印机等一些外围设备。&lt;/li&gt;
&lt;li&gt;ASCII 打印字符：数字 &lt;strong&gt;32-126&lt;/strong&gt; 分配给了能在键盘上找到的字符，当查看或打印文档时就会出现。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;25-转义字符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#25-转义字符&#34;&gt;#&lt;/a&gt; 2.5 转义字符&lt;/h3&gt;
&lt;p&gt;** 作用：** 用于表示一些&lt;mark&gt;不能显示出来的 ASCII 字符&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;现阶段我们常用的转义字符有： &lt;code&gt; \n  \\  \t&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;转义字符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;含义&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;ASCII&lt;/strong&gt; 码值（十进制）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\a&lt;/td&gt;
&lt;td&gt;警报&lt;/td&gt;
&lt;td&gt;007&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\b&lt;/td&gt;
&lt;td&gt;退格 (BS) ，将当前位置移到前一列&lt;/td&gt;
&lt;td&gt;008&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\f&lt;/td&gt;
&lt;td&gt;换页 (FF)，将当前位置移到下页开头&lt;/td&gt;
&lt;td&gt;012&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;\n&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;换行 (LF) ，将当前位置移到下一行开头&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;010&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\r&lt;/td&gt;
&lt;td&gt;回车 (CR) ，将当前位置移到本行开头&lt;/td&gt;
&lt;td&gt;013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;\t&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;水平制表 (HT)  （跳到下一个 TAB 位置）&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;009&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\v&lt;/td&gt;
&lt;td&gt;垂直制表 (VT)&lt;/td&gt;
&lt;td&gt;011&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;\\&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;代表一个反斜线字符 &amp;quot;&amp;quot;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;092&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&#39;&lt;/td&gt;
&lt;td&gt;代表一个单引号（撇号）字符&lt;/td&gt;
&lt;td&gt;039&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;quot;&lt;/td&gt;
&lt;td&gt;代表一个双引号字符&lt;/td&gt;
&lt;td&gt;034&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;代表一个问号&lt;/td&gt;
&lt;td&gt;063&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\0&lt;/td&gt;
&lt;td&gt;数字 0&lt;/td&gt;
&lt;td&gt;000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\ddd&lt;/td&gt;
&lt;td&gt;8 进制转义字符，d 范围 0~7&lt;/td&gt;
&lt;td&gt;3 位 8 进制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\xhh&lt;/td&gt;
&lt;td&gt;16 进制转义字符，h 范围 0&lt;sub&gt;9，a&lt;/sub&gt;f，A~F&lt;/td&gt;
&lt;td&gt;3 位 16 进制&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;
	
	
	cout &amp;lt;&amp;lt; &amp;quot;\\&amp;quot; &amp;lt;&amp;lt; endl;
	cout &amp;lt;&amp;lt; &amp;quot;\tHello&amp;quot; &amp;lt;&amp;lt; endl;
	cout &amp;lt;&amp;lt; &amp;quot;\n&amp;quot; &amp;lt;&amp;lt; endl;

	system(&amp;quot;pause&amp;quot;);

	return 0;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;26-字符串型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#26-字符串型&#34;&gt;#&lt;/a&gt; 2.6 字符串型&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：用于表示一串字符&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;两种风格&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;C 风格字符串&lt;/strong&gt;：  &lt;code&gt;char 变量名[] = &amp;quot;字符串值&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;

	char str1[] = &amp;quot;hello world&amp;quot;;
	cout &amp;lt;&amp;lt; str1 &amp;lt;&amp;lt; endl;
    
	system(&amp;quot;pause&amp;quot;);

	return 0;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：C 风格的字符串要用双引号括起来&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;C++ 风格字符串&lt;/strong&gt;：   &lt;code&gt;string  变量名 = &amp;quot;字符串值&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	string str = &amp;quot;hello world&amp;quot;;	cout &amp;lt;&amp;lt; str &amp;lt;&amp;lt; endl;		system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：C++ 风格字符串，需要加入头文件 ==#include&amp;lt;string&amp;gt;==&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;27-布尔类型-bool&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#27-布尔类型-bool&#34;&gt;#&lt;/a&gt; 2.7 布尔类型 bool&lt;/h3&gt;
&lt;p&gt;** 作用：** 布尔数据类型代表真或假的值&lt;/p&gt;
&lt;p&gt;bool 类型只有两个值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;true  --- 真（本质是 1）&lt;/li&gt;
&lt;li&gt;false --- 假（本质是 0）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;bool 类型占&lt;mark&gt; 1 个字节&lt;/mark&gt;大小&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	bool flag = true;	cout &amp;lt;&amp;lt; flag &amp;lt;&amp;lt; endl; // 1	flag = false;	cout &amp;lt;&amp;lt; flag &amp;lt;&amp;lt; endl; // 0	cout &amp;lt;&amp;lt; &amp;quot;size of bool = &amp;quot; &amp;lt;&amp;lt; sizeof(bool) &amp;lt;&amp;lt; endl; //1		system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;28-数据的输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#28-数据的输入&#34;&gt;#&lt;/a&gt; 2.8 数据的输入&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用：用于从键盘获取数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;** 关键字：**cin&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;  &lt;code&gt;cin &amp;gt;&amp;gt; 变量 &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main()&amp;#123;	//整型输入	int a = 0;	cout &amp;lt;&amp;lt; &amp;quot;请输入整型变量：&amp;quot; &amp;lt;&amp;lt; endl;	cin &amp;gt;&amp;gt; a;	cout &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl;	//浮点型输入	double d = 0;	cout &amp;lt;&amp;lt; &amp;quot;请输入浮点型变量：&amp;quot; &amp;lt;&amp;lt; endl;	cin &amp;gt;&amp;gt; d;	cout &amp;lt;&amp;lt; d &amp;lt;&amp;lt; endl;	//字符型输入	char ch = 0;	cout &amp;lt;&amp;lt; &amp;quot;请输入字符型变量：&amp;quot; &amp;lt;&amp;lt; endl;	cin &amp;gt;&amp;gt; ch;	cout &amp;lt;&amp;lt; ch &amp;lt;&amp;lt; endl;	//字符串型输入	string str;	cout &amp;lt;&amp;lt; &amp;quot;请输入字符串型变量：&amp;quot; &amp;lt;&amp;lt; endl;	cin &amp;gt;&amp;gt; str;	cout &amp;lt;&amp;lt; str &amp;lt;&amp;lt; endl;	//布尔类型输入	bool flag = true;	cout &amp;lt;&amp;lt; &amp;quot;请输入布尔型变量：&amp;quot; &amp;lt;&amp;lt; endl;	cin &amp;gt;&amp;gt; flag;	cout &amp;lt;&amp;lt; flag &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return EXIT_SUCCESS;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;3-运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-运算符&#34;&gt;#&lt;/a&gt; 3 运算符&lt;/h2&gt;
&lt;p&gt;** 作用：** 用于执行代码的运算&lt;/p&gt;
&lt;p&gt;本章我们主要讲解以下几类运算符：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;运算符类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;作用&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;算术运算符&lt;/td&gt;
&lt;td&gt;用于处理四则运算&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;赋值运算符&lt;/td&gt;
&lt;td&gt;用于将表达式的值赋给变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;比较运算符&lt;/td&gt;
&lt;td&gt;用于表达式的比较，并返回一个真值或假值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;逻辑运算符&lt;/td&gt;
&lt;td&gt;用于根据表达式的值返回真值或假值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;31-算术运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-算术运算符&#34;&gt;#&lt;/a&gt; 3.1 算术运算符&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：用于处理四则运算&lt;/p&gt;
&lt;p&gt;算术运算符包括以下符号：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;术语&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;结果&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;正号&lt;/td&gt;
&lt;td&gt;+3&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;负号&lt;/td&gt;
&lt;td&gt;-3&lt;/td&gt;
&lt;td&gt;-3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;加&lt;/td&gt;
&lt;td&gt;10 + 5&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;减&lt;/td&gt;
&lt;td&gt;10 - 5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;乘&lt;/td&gt;
&lt;td&gt;10 * 5&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;除&lt;/td&gt;
&lt;td&gt;10 / 5&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td&gt;取模 (取余)&lt;/td&gt;
&lt;td&gt;10 % 3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;++&lt;/td&gt;
&lt;td&gt;前置递增&lt;/td&gt;
&lt;td&gt;a=2; b=++a;&lt;/td&gt;
&lt;td&gt;a=3; b=3;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;++&lt;/td&gt;
&lt;td&gt;后置递增&lt;/td&gt;
&lt;td&gt;a=2; b=a++;&lt;/td&gt;
&lt;td&gt;a=3; b=2;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--&lt;/td&gt;
&lt;td&gt;前置递减&lt;/td&gt;
&lt;td&gt;a=2; b=--a;&lt;/td&gt;
&lt;td&gt;a=1; b=1;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--&lt;/td&gt;
&lt;td&gt;后置递减&lt;/td&gt;
&lt;td&gt;a=2; b=a--;&lt;/td&gt;
&lt;td&gt;a=1; b=2;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//加减乘除int main() &amp;#123;	int a1 = 10;	int b1 = 3;	cout &amp;lt;&amp;lt; a1 + b1 &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; a1 - b1 &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; a1 * b1 &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; a1 / b1 &amp;lt;&amp;lt; endl;  //两个整数相除结果依然是整数	int a2 = 10;	int b2 = 20;	cout &amp;lt;&amp;lt; a2 / b2 &amp;lt;&amp;lt; endl; 	int a3 = 10;	int b3 = 0;	//cout &amp;lt;&amp;lt; a3 / b3 &amp;lt;&amp;lt; endl; //报错，除数不可以为0	//两个小数可以相除	double d1 = 0.5;	double d2 = 0.25;	cout &amp;lt;&amp;lt; d1 / d2 &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：在除法运算中，除数不能为 0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//取模int main() &amp;#123;	int a1 = 10;	int b1 = 3;	cout &amp;lt;&amp;lt; 10 % 3 &amp;lt;&amp;lt; endl;	int a2 = 10;	int b2 = 20;	cout &amp;lt;&amp;lt; a2 % b2 &amp;lt;&amp;lt; endl;	int a3 = 10;	int b3 = 0;	//cout &amp;lt;&amp;lt; a3 % b3 &amp;lt;&amp;lt; endl; //取模运算时，除数也不能为0	//两个小数不可以取模	double d1 = 3.14;	double d2 = 1.1;	//cout &amp;lt;&amp;lt; d1 % d2 &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：只有整型变量可以进行取模运算&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//递增int main() &amp;#123;	//后置递增	int a = 10;	a++; //等价于a = a + 1	cout &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl; // 11	//前置递增	int b = 10;	++b;	cout &amp;lt;&amp;lt; b &amp;lt;&amp;lt; endl; // 11	//区别	//前置递增先对变量进行++，再计算表达式	int a2 = 10;	int b2 = ++a2 * 10;	cout &amp;lt;&amp;lt; b2 &amp;lt;&amp;lt; endl;	//后置递增先计算表达式，后对变量进行++	int a3 = 10;	int b3 = a3++ * 10;	cout &amp;lt;&amp;lt; b3 &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：前置递增先对变量进行 ++，再计算表达式，后置递增相反&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;32-赋值运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32-赋值运算符&#34;&gt;#&lt;/a&gt; 3.2 赋值运算符&lt;/h3&gt;
&lt;p&gt;** 作用：** 用于将表达式的值赋给变量&lt;/p&gt;
&lt;p&gt;赋值运算符包括以下几个符号：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;术语&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;结果&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;赋值&lt;/td&gt;
&lt;td&gt;a=2; b=3;&lt;/td&gt;
&lt;td&gt;a=2; b=3;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+=&lt;/td&gt;
&lt;td&gt;加等于&lt;/td&gt;
&lt;td&gt;a=0; a+=2;&lt;/td&gt;
&lt;td&gt;a=2;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-=&lt;/td&gt;
&lt;td&gt;减等于&lt;/td&gt;
&lt;td&gt;a=5; a-=3;&lt;/td&gt;
&lt;td&gt;a=2;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*=&lt;/td&gt;
&lt;td&gt;乘等于&lt;/td&gt;
&lt;td&gt;a=2; a*=2;&lt;/td&gt;
&lt;td&gt;a=4;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/=&lt;/td&gt;
&lt;td&gt;除等于&lt;/td&gt;
&lt;td&gt;a=4; a/=2;&lt;/td&gt;
&lt;td&gt;a=2;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%=&lt;/td&gt;
&lt;td&gt;模等于&lt;/td&gt;
&lt;td&gt;a=3; a%2;&lt;/td&gt;
&lt;td&gt;a=1;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//赋值运算符	// =	int a = 10;	a = 100;	cout &amp;lt;&amp;lt; &amp;quot;a = &amp;quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl;	// +=	a = 10;	a += 2; // a = a + 2;	cout &amp;lt;&amp;lt; &amp;quot;a = &amp;quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl;	// -=	a = 10;	a -= 2; // a = a - 2	cout &amp;lt;&amp;lt; &amp;quot;a = &amp;quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl;	// *=	a = 10;	a *= 2; // a = a * 2	cout &amp;lt;&amp;lt; &amp;quot;a = &amp;quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl;	// /=	a = 10;	a /= 2;  // a = a / 2;	cout &amp;lt;&amp;lt; &amp;quot;a = &amp;quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl;	// %=	a = 10;	a %= 2;  // a = a % 2;	cout &amp;lt;&amp;lt; &amp;quot;a = &amp;quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;33-比较运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33-比较运算符&#34;&gt;#&lt;/a&gt; 3.3 比较运算符&lt;/h3&gt;
&lt;p&gt;** 作用：** 用于表达式的比较，并返回一个真值或假值&lt;/p&gt;
&lt;p&gt;比较运算符有以下符号：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;术语&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;结果&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;==&lt;/td&gt;
&lt;td&gt;相等于&lt;/td&gt;
&lt;td&gt;4 == 3&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!=&lt;/td&gt;
&lt;td&gt;不等于&lt;/td&gt;
&lt;td&gt;4 != 3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;小于&lt;/td&gt;
&lt;td&gt;4 &amp;lt; 3&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;大于&lt;/td&gt;
&lt;td&gt;4 &amp;gt; 3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=&lt;/td&gt;
&lt;td&gt;小于等于&lt;/td&gt;
&lt;td&gt;4 &amp;lt;= 3&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;=&lt;/td&gt;
&lt;td&gt;大于等于&lt;/td&gt;
&lt;td&gt;4 &amp;gt;= 1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	int a = 10;	int b = 20;	cout &amp;lt;&amp;lt; (a == b) &amp;lt;&amp;lt; endl; // 0 	cout &amp;lt;&amp;lt; (a != b) &amp;lt;&amp;lt; endl; // 1	cout &amp;lt;&amp;lt; (a &amp;gt; b) &amp;lt;&amp;lt; endl; // 0	cout &amp;lt;&amp;lt; (a &amp;lt; b) &amp;lt;&amp;lt; endl; // 1	cout &amp;lt;&amp;lt; (a &amp;gt;= b) &amp;lt;&amp;lt; endl; // 0	cout &amp;lt;&amp;lt; (a &amp;lt;= b) &amp;lt;&amp;lt; endl; // 1		system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：C 和 C++ 语言的比较运算中， &lt;mark&gt;“真” 用数字 “1” 来表示， “假” 用数字 “0” 来表示。&lt;/mark&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;34-逻辑运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#34-逻辑运算符&#34;&gt;#&lt;/a&gt; 3.4 逻辑运算符&lt;/h3&gt;
&lt;p&gt;** 作用：** 用于根据表达式的值返回真值或假值&lt;/p&gt;
&lt;p&gt;逻辑运算符有以下符号：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;术语&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;结果&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;!&lt;/td&gt;
&lt;td&gt;非&lt;/td&gt;
&lt;td&gt;!a&lt;/td&gt;
&lt;td&gt;如果 a 为假，则！a 为真；  如果 a 为真，则！a 为假。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;与&lt;/td&gt;
&lt;td&gt;a &amp;amp;&amp;amp; b&lt;/td&gt;
&lt;td&gt;如果 a 和 b 都为真，则结果为真，否则为假。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;||&lt;/td&gt;
&lt;td&gt;或&lt;/td&gt;
&lt;td&gt;a || b&lt;/td&gt;
&lt;td&gt;如果 a 和 b 有一个为真，则结果为真，二者都为假时，结果为假。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;** 示例 1：** 逻辑非&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//逻辑运算符  --- 非int main() &amp;#123;	int a = 10;	cout &amp;lt;&amp;lt; !a &amp;lt;&amp;lt; endl; // 0	cout &amp;lt;&amp;lt; !!a &amp;lt;&amp;lt; endl; // 1	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结： 真变假，假变真&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;** 示例 2：** 逻辑与&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//逻辑运算符  --- 与int main() &amp;#123;	int a = 10;	int b = 10;	cout &amp;lt;&amp;lt; (a &amp;amp;&amp;amp; b) &amp;lt;&amp;lt; endl;// 1	a = 10;	b = 0;	cout &amp;lt;&amp;lt; (a &amp;amp;&amp;amp; b) &amp;lt;&amp;lt; endl;// 0 	a = 0;	b = 0;	cout &amp;lt;&amp;lt; (a &amp;amp;&amp;amp; b) &amp;lt;&amp;lt; endl;// 0	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：逻辑&lt;mark&gt;与&lt;/mark&gt;运算符总结： &lt;mark&gt;同真为真，其余为假&lt;/mark&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;** 示例 3：** 逻辑或&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;//逻辑运算符  --- 或int main() &amp;#123;	int a = 10;	int b = 10;	cout &amp;lt;&amp;lt; (a || b) &amp;lt;&amp;lt; endl;// 1	a = 10;	b = 0;	cout &amp;lt;&amp;lt; (a || b) &amp;lt;&amp;lt; endl;// 1 	a = 0;	b = 0;	cout &amp;lt;&amp;lt; (a || b) &amp;lt;&amp;lt; endl;// 0	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;逻辑&lt;mark&gt;或&lt;/mark&gt;运算符总结： &lt;mark&gt;同假为假，其余为真&lt;/mark&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;4-程序流程结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-程序流程结构&#34;&gt;#&lt;/a&gt; 4 程序流程结构&lt;/h2&gt;
&lt;p&gt;C/C++ 支持最基本的三种程序运行结构：&lt;mark&gt;顺序结构、选择结构、循环结构&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;顺序结构：程序按顺序执行，不发生跳转&lt;/li&gt;
&lt;li&gt;选择结构：依据条件是否满足，有选择的执行相应功能&lt;/li&gt;
&lt;li&gt;循环结构：依据条件是否满足，循环多次执行某段代码&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;41-选择结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#41-选择结构&#34;&gt;#&lt;/a&gt; 4.1 选择结构&lt;/h3&gt;
&lt;h4 id=&#34;411-if语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#411-if语句&#34;&gt;#&lt;/a&gt; 4.1.1 if 语句&lt;/h4&gt;
&lt;p&gt;** 作用：** 执行满足条件的语句&lt;/p&gt;
&lt;p&gt;if 语句的三种形式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;单行格式 if 语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多行格式 if 语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多条件的 if 语句&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;单行格式 if 语句： &lt;code&gt;if(条件)&amp;#123; 条件满足执行的语句 &amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;![img](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/clip_image002.png)&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//选择结构-单行if语句	//输入一个分数，如果分数大于600分，视为考上一本大学，并在屏幕上打印	int score = 0;	cout &amp;lt;&amp;lt; &amp;quot;请输入一个分数：&amp;quot; &amp;lt;&amp;lt; endl;	cin &amp;gt;&amp;gt; score;	cout &amp;lt;&amp;lt; &amp;quot;您输入的分数为： &amp;quot; &amp;lt;&amp;lt; score &amp;lt;&amp;lt; endl;	//if语句	//注意事项，在if判断语句后面，不要加分号	if (score &amp;gt; 600)	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;我考上了一本大学！！！&amp;quot; &amp;lt;&amp;lt; endl;	&amp;#125;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：if 条件表达式后不要加分号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;多行格式 if 语句： &lt;code&gt;if(条件)&amp;#123; 条件满足执行的语句 &amp;#125;else&amp;#123; 条件不满足执行的语句 &amp;#125;;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;![img](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/clip_image002-1541662519170.png)&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	int score = 0;	cout &amp;lt;&amp;lt; &amp;quot;请输入考试分数：&amp;quot; &amp;lt;&amp;lt; endl;	cin &amp;gt;&amp;gt; score;	if (score &amp;gt; 600)	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;我考上了一本大学&amp;quot; &amp;lt;&amp;lt; endl;	&amp;#125;	else	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;我未考上一本大学&amp;quot; &amp;lt;&amp;lt; endl;	&amp;#125;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;多条件的 if 语句： &lt;code&gt;if(条件1)&amp;#123; 条件1满足执行的语句 &amp;#125;else if(条件2)&amp;#123;条件2满足执行的语句&amp;#125;... else&amp;#123; 都不满足执行的语句&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;![img](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/clip_image002-1541662566808.png)&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;	int main() &amp;#123;	int score = 0;	cout &amp;lt;&amp;lt; &amp;quot;请输入考试分数：&amp;quot; &amp;lt;&amp;lt; endl;	cin &amp;gt;&amp;gt; score;	if (score &amp;gt; 600)	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;我考上了一本大学&amp;quot; &amp;lt;&amp;lt; endl;	&amp;#125;	else if (score &amp;gt; 500)	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;我考上了二本大学&amp;quot; &amp;lt;&amp;lt; endl;	&amp;#125;	else if (score &amp;gt; 400)	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;我考上了三本大学&amp;quot; &amp;lt;&amp;lt; endl;	&amp;#125;	else	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;我未考上本科&amp;quot; &amp;lt;&amp;lt; endl;	&amp;#125;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;嵌套 if 语句&lt;/strong&gt;：在 if 语句中，可以嵌套使用 if 语句，达到更精确的条件判断&lt;/p&gt;
&lt;p&gt;案例需求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提示用户输入一个高考考试分数，根据分数做如下判断&lt;/li&gt;
&lt;li&gt;分数如果大于 600 分视为考上一本，大于 500 分考上二本，大于 400 考上三本，其余视为未考上本科；&lt;/li&gt;
&lt;li&gt;在一本分数中，如果大于 700 分，考入北大，大于 650 分，考入清华，大于 600 考入人大。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;int main() &amp;#123;	int score = 0;	cout &amp;lt;&amp;lt; &amp;quot;请输入考试分数：&amp;quot; &amp;lt;&amp;lt; endl;	cin &amp;gt;&amp;gt; score;	if (score &amp;gt; 600)	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;我考上了一本大学&amp;quot; &amp;lt;&amp;lt; endl;		if (score &amp;gt; 700)		&amp;#123;			cout &amp;lt;&amp;lt; &amp;quot;我考上了北大&amp;quot; &amp;lt;&amp;lt; endl;		&amp;#125;		else if (score &amp;gt; 650)		&amp;#123;			cout &amp;lt;&amp;lt; &amp;quot;我考上了清华&amp;quot; &amp;lt;&amp;lt; endl;		&amp;#125;		else		&amp;#123;			cout &amp;lt;&amp;lt; &amp;quot;我考上了人大&amp;quot; &amp;lt;&amp;lt; endl;		&amp;#125;			&amp;#125;	else if (score &amp;gt; 500)	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;我考上了二本大学&amp;quot; &amp;lt;&amp;lt; endl;	&amp;#125;	else if (score &amp;gt; 400)	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;我考上了三本大学&amp;quot; &amp;lt;&amp;lt; endl;	&amp;#125;	else	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;我未考上本科&amp;quot; &amp;lt;&amp;lt; endl;	&amp;#125;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;练习案例：&lt;/strong&gt; 三只小猪称体重&lt;/p&gt;
&lt;p&gt;有三只小猪 ABC，请分别输入三只小猪的体重，并且判断哪只小猪最重？![三只小猪](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/ 三只小猪.jpg)&lt;/p&gt;
&lt;h4 id=&#34;412-三目运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#412-三目运算符&#34;&gt;#&lt;/a&gt; 4.1.2 三目运算符&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt; 通过三目运算符实现简单的判断&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt; &lt;code&gt;表达式1 ? 表达式2 ：表达式3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解释：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果表达式 1 的值为真，执行表达式 2，并返回表达式 2 的结果；&lt;/p&gt;
&lt;p&gt;如果表达式 1 的值为假，执行表达式 3，并返回表达式 3 的结果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	int a = 10;	int b = 20;	int c = 0;	c = a &amp;gt; b ? a : b;	cout &amp;lt;&amp;lt; &amp;quot;c = &amp;quot; &amp;lt;&amp;lt; c &amp;lt;&amp;lt; endl;	//C++中三目运算符返回的是变量,可以继续赋值	(a &amp;gt; b ? a : b) = 100;	cout &amp;lt;&amp;lt; &amp;quot;a = &amp;quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;b = &amp;quot; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;c = &amp;quot; &amp;lt;&amp;lt; c &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：和 if 语句比较，三目运算符优点是短小整洁，缺点是如果用嵌套，结构不清晰&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;413-switch语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#413-switch语句&#34;&gt;#&lt;/a&gt; 4.1.3 switch 语句&lt;/h4&gt;
&lt;p&gt;** 作用：** 执行多条件分支语句&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;switch(表达式)&amp;#123;	case 结果1：执行语句;break;	case 结果2：执行语句;break;	...	default:执行语句;break;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//请给电影评分 	//10 ~ 9   经典   	// 8 ~ 7   非常好	// 6 ~ 5   一般	// 5分以下 烂片	int score = 0;	cout &amp;lt;&amp;lt; &amp;quot;请给电影打分&amp;quot; &amp;lt;&amp;lt; endl;	cin &amp;gt;&amp;gt; score;	switch (score)	&amp;#123;	case 10:	case 9:		cout &amp;lt;&amp;lt; &amp;quot;经典&amp;quot; &amp;lt;&amp;lt; endl;		break;	case 8:		cout &amp;lt;&amp;lt; &amp;quot;非常好&amp;quot; &amp;lt;&amp;lt; endl;		break;	case 7:	case 6:		cout &amp;lt;&amp;lt; &amp;quot;一般&amp;quot; &amp;lt;&amp;lt; endl;		break;	default:		cout &amp;lt;&amp;lt; &amp;quot;烂片&amp;quot; &amp;lt;&amp;lt; endl;		break;	&amp;#125;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;注意 1：switch 语句中表达式类型只能是整型或者字符型&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;注意 2：case 里如果没有 break，那么程序会一直向下执行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：与 if 语句比，对于多条件判断时，switch 的结构清晰，执行效率高，缺点是 switch 不可以判断区间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;42-循环结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#42-循环结构&#34;&gt;#&lt;/a&gt; 4.2 循环结构&lt;/h3&gt;
&lt;h4 id=&#34;421-while循环语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#421-while循环语句&#34;&gt;#&lt;/a&gt; 4.2.1 while 循环语句&lt;/h4&gt;
&lt;p&gt;** 作用：** 满足循环条件，执行循环语句&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt; &lt;code&gt; while(循环条件)&amp;#123; 循环语句 &amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解释：&lt;/strong&gt;&lt;mark&gt;只要循环条件的结果为真，就执行循环语句&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;![img](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/clip_image002-1541668640382.png)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	int num = 0;	while (num &amp;lt; 10)	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;num = &amp;quot; &amp;lt;&amp;lt; num &amp;lt;&amp;lt; endl;		num++;	&amp;#125;		system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：在执行循环语句时候，程序必须提供跳出循环的出口，否则出现死循环&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;while 循环练习案例：&lt;/strong&gt;&lt;mark&gt;猜数字&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;** 案例描述：** 系统随机生成一个 1 到 100 之间的数字，玩家进行猜测，如果猜错，提示玩家数字过大或过小，如果猜对恭喜玩家胜利，并且退出游戏。&lt;/p&gt;
&lt;p&gt;![猜数字](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/ 猜数字.jpg)&lt;/p&gt;
&lt;h4 id=&#34;422-dowhile循环语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#422-dowhile循环语句&#34;&gt;#&lt;/a&gt; 4.2.2 do...while 循环语句&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt; 满足循环条件，执行循环语句&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;  &lt;code&gt;do&amp;#123; 循环语句 &amp;#125; while(循环条件);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;** 注意：** 与 while 的区别在于&lt;mark&gt; do...while 会先执行一次循环语句&lt;/mark&gt;，再判断循环条件&lt;/p&gt;
&lt;p&gt;![img](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/clip_image002-1541671163478.png)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	int num = 0;	do	&amp;#123;		cout &amp;lt;&amp;lt; num &amp;lt;&amp;lt; endl;		num++;	&amp;#125; while (num &amp;lt; 10);			system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：与 while 循环区别在于，do...while 先执行一次循环语句，再判断循环条件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;练习案例：水仙花数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;** 案例描述：** 水仙花数是指一个 3 位数，它的每个位上的数字的 3 次幂之和等于它本身&lt;/p&gt;
&lt;p&gt;例如：1^3 + 5^3+ 3^3 = 153&lt;/p&gt;
&lt;p&gt;请利用 do...while 语句，求出所有 3 位数中的水仙花数&lt;/p&gt;
&lt;h4 id=&#34;423-for循环语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#423-for循环语句&#34;&gt;#&lt;/a&gt; 4.2.3 for 循环语句&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt; 满足循环条件，执行循环语句&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt; &lt;code&gt; for(起始表达式;条件表达式;末尾循环体) &amp;#123; 循环语句; &amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	for (int i = 0; i &amp;lt; 10; i++)	&amp;#123;		cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;	&amp;#125;		system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;详解：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;![1541673704101](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/1541673704101.png)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：for 循环中的表达式，要用分号进行分隔&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：while , do...while, for 都是开发中常用的循环语句，for 循环结构比较清晰，比较常用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;练习案例：敲桌子&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;案例描述：从 1 开始数到数字 100， 如果数字个位含有 7，或者数字十位含有 7，或者该数字是 7 的倍数，我们打印敲桌子，其余数字直接打印输出。&lt;/p&gt;
&lt;p&gt;![timg](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/timg.gif)&lt;/p&gt;
&lt;h4 id=&#34;424-嵌套循环&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#424-嵌套循环&#34;&gt;#&lt;/a&gt; 4.2.4 嵌套循环&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt; 在循环体中再嵌套一层循环，解决一些实际问题&lt;/p&gt;
&lt;p&gt;例如我们想在屏幕中打印如下图片，就需要利用嵌套循环&lt;/p&gt;
&lt;p&gt;![1541676003486](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/1541676003486.png)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//外层循环执行1次，内层循环执行1轮	for (int i = 0; i &amp;lt; 10; i++)	&amp;#123;		for (int j = 0; j &amp;lt; 10; j++)		&amp;#123;			cout &amp;lt;&amp;lt; &amp;quot;*&amp;quot; &amp;lt;&amp;lt; &amp;quot; &amp;quot;;		&amp;#125;		cout &amp;lt;&amp;lt; endl;	&amp;#125;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;** 练习案例：** 乘法口诀表&lt;/p&gt;
&lt;p&gt;案例描述：利用嵌套循环，实现九九乘法表&lt;/p&gt;
&lt;p&gt;![0006018857256120_b](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/0006018857256120_b.jpg)&lt;/p&gt;
&lt;h3 id=&#34;43-跳转语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#43-跳转语句&#34;&gt;#&lt;/a&gt; 4.3 跳转语句&lt;/h3&gt;
&lt;h4 id=&#34;431-break语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#431-break语句&#34;&gt;#&lt;/a&gt; 4.3.1 break 语句&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;作用:&lt;/strong&gt; 用于跳出&lt;mark&gt;选择结构&lt;/mark&gt;或者&lt;mark&gt;循环结构&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;break 使用的时机：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;出现在 switch 条件语句中，作用是终止 case 并跳出 switch&lt;/li&gt;
&lt;li&gt;出现在循环语句中，作用是跳出当前的循环语句&lt;/li&gt;
&lt;li&gt;出现在嵌套循环中，跳出最近的内层循环语句&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//1、在switch 语句中使用break	cout &amp;lt;&amp;lt; &amp;quot;请选择您挑战副本的难度：&amp;quot; &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;1、普通&amp;quot; &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;2、中等&amp;quot; &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;3、困难&amp;quot; &amp;lt;&amp;lt; endl;	int num = 0;	cin &amp;gt;&amp;gt; num;	switch (num)	&amp;#123;	case 1:		cout &amp;lt;&amp;lt; &amp;quot;您选择的是普通难度&amp;quot; &amp;lt;&amp;lt; endl;		break;	case 2:		cout &amp;lt;&amp;lt; &amp;quot;您选择的是中等难度&amp;quot; &amp;lt;&amp;lt; endl;		break;	case 3:		cout &amp;lt;&amp;lt; &amp;quot;您选择的是困难难度&amp;quot; &amp;lt;&amp;lt; endl;		break;	&amp;#125;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//2、在循环语句中用break	for (int i = 0; i &amp;lt; 10; i++)	&amp;#123;		if (i == 5)		&amp;#123;			break; //跳出循环语句		&amp;#125;		cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;	&amp;#125;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//在嵌套循环语句中使用break，退出内层循环	for (int i = 0; i &amp;lt; 10; i++)	&amp;#123;		for (int j = 0; j &amp;lt; 10; j++)		&amp;#123;			if (j == 5)			&amp;#123;				break;			&amp;#125;			cout &amp;lt;&amp;lt; &amp;quot;*&amp;quot; &amp;lt;&amp;lt; &amp;quot; &amp;quot;;		&amp;#125;		cout &amp;lt;&amp;lt; endl;	&amp;#125;		system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;432-continue语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#432-continue语句&#34;&gt;#&lt;/a&gt; 4.3.2 continue 语句&lt;/h4&gt;
&lt;p&gt;** 作用：** 在&lt;mark&gt;循环语句&lt;/mark&gt;中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	for (int i = 0; i &amp;lt; 100; i++)	&amp;#123;		if (i % 2 == 0)		&amp;#123;			continue;		&amp;#125;		cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;	&amp;#125;		system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：continue 并没有使整个循环终止，而 break 会跳出循环&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;433-goto语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#433-goto语句&#34;&gt;#&lt;/a&gt; 4.3.3 goto 语句&lt;/h4&gt;
&lt;p&gt;** 作用：** 可以无条件跳转语句&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;  &lt;code&gt;goto 标记;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;** 解释：** 如果标记的名称存在，执行到 goto 语句时，会跳转到标记的位置&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	cout &amp;lt;&amp;lt; &amp;quot;1&amp;quot; &amp;lt;&amp;lt; endl;	goto FLAG;	cout &amp;lt;&amp;lt; &amp;quot;2&amp;quot; &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;3&amp;quot; &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;4&amp;quot; &amp;lt;&amp;lt; endl;	FLAG:	cout &amp;lt;&amp;lt; &amp;quot;5&amp;quot; &amp;lt;&amp;lt; endl;		system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：在程序中不建议使用 goto 语句，以免造成程序流程混乱&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;5-数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-数组&#34;&gt;#&lt;/a&gt; 5 数组&lt;/h2&gt;
&lt;h3 id=&#34;51-概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#51-概述&#34;&gt;#&lt;/a&gt; 5.1 概述&lt;/h3&gt;
&lt;p&gt;所谓数组，就是一个集合，里面存放了相同类型的数据元素&lt;/p&gt;
&lt;p&gt;** 特点 1：** 数组中的每个&lt;mark&gt;数据元素都是相同的数据类型&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;** 特点 2：** 数组是由&lt;mark&gt;连续的内存&lt;/mark&gt;位置组成的&lt;/p&gt;
&lt;p&gt;![1541748375356](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/1541748375356.png)&lt;/p&gt;
&lt;h3 id=&#34;52-一维数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#52-一维数组&#34;&gt;#&lt;/a&gt; 5.2 一维数组&lt;/h3&gt;
&lt;h4 id=&#34;521-一维数组定义方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#521-一维数组定义方式&#34;&gt;#&lt;/a&gt; 5.2.1 一维数组定义方式&lt;/h4&gt;
&lt;p&gt;一维数组定义的三种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;数据类型  数组名[ 数组长度 ];&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;数据类型  数组名[ 数组长度 ] = &amp;#123; 值1，值2 ...&amp;#125;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;数据类型  数组名[ ] = &amp;#123; 值1，值2 ...&amp;#125;;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;示例&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//定义方式1	//数据类型 数组名[元素个数];	int score[10];	//利用下标赋值	score[0] = 100;	score[1] = 99;	score[2] = 85;	//利用下标输出	cout &amp;lt;&amp;lt; score[0] &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; score[1] &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; score[2] &amp;lt;&amp;lt; endl;	//第二种定义方式	//数据类型 数组名[元素个数] =  &amp;#123;值1，值2 ，值3 ...&amp;#125;;	//如果&amp;#123;&amp;#125;内不足10个数据，剩余数据用0补全	int score2[10] = &amp;#123; 100, 90,80,70,60,50,40,30,20,10 &amp;#125;;		//逐个输出	//cout &amp;lt;&amp;lt; score2[0] &amp;lt;&amp;lt; endl;	//cout &amp;lt;&amp;lt; score2[1] &amp;lt;&amp;lt; endl;	//一个一个输出太麻烦，因此可以利用循环进行输出	for (int i = 0; i &amp;lt; 10; i++)	&amp;#123;		cout &amp;lt;&amp;lt; score2[i] &amp;lt;&amp;lt; endl;	&amp;#125;	//定义方式3	//数据类型 数组名[] =  &amp;#123;值1，值2 ，值3 ...&amp;#125;;	int score3[] = &amp;#123; 100,90,80,70,60,50,40,30,20,10 &amp;#125;;	for (int i = 0; i &amp;lt; 10; i++)	&amp;#123;		cout &amp;lt;&amp;lt; score3[i] &amp;lt;&amp;lt; endl;	&amp;#125;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结 1：数组名的命名规范与变量名命名规范一致，不要和变量重名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;总结 2：数组中下标是从 0 开始索引&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;522-一维数组数组名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#522-一维数组数组名&#34;&gt;#&lt;/a&gt; 5.2.2 一维数组数组名&lt;/h4&gt;
&lt;p&gt;一维数组名称的&lt;strong&gt;用途&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以统计整个数组在内存中的长度&lt;/li&gt;
&lt;li&gt;可以获取数组在内存中的首地址&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//数组名用途	//1、可以获取整个数组占用内存空间大小	int arr[10] = &amp;#123; 1,2,3,4,5,6,7,8,9,10 &amp;#125;;	cout &amp;lt;&amp;lt; &amp;quot;整个数组所占内存空间为： &amp;quot; &amp;lt;&amp;lt; sizeof(arr) &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;每个元素所占内存空间为： &amp;quot; &amp;lt;&amp;lt; sizeof(arr[0]) &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;数组的元素个数为： &amp;quot; &amp;lt;&amp;lt; sizeof(arr) / sizeof(arr[0]) &amp;lt;&amp;lt; endl;	//2、可以通过数组名获取到数组首地址	cout &amp;lt;&amp;lt; &amp;quot;数组首地址为： &amp;quot; &amp;lt;&amp;lt; (int)arr &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;数组中第一个元素地址为： &amp;quot; &amp;lt;&amp;lt; (int)&amp;amp;arr[0] &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;数组中第二个元素地址为： &amp;quot; &amp;lt;&amp;lt; (int)&amp;amp;arr[1] &amp;lt;&amp;lt; endl;	//arr = 100; 错误，数组名是常量，因此不可以赋值	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：数组名是常量，不可以赋值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;总结 1：直接打印数组名，可以查看数组所占内存的首地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;总结 2：对数组名进行 sizeof，可以获取整个数组占内存空间的大小&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;练习案例 1&lt;/strong&gt;：五只小猪称体重&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;案例描述：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在一个数组中记录了五只小猪的体重，如：int arr [5] = {300,350,200,400,250};&lt;/p&gt;
&lt;p&gt;找出并打印最重的小猪体重。&lt;/p&gt;
&lt;p&gt;** 练习案例 2：** 数组元素逆置&lt;/p&gt;
&lt;p&gt;** 案例描述：** 请声明一个 5 个元素的数组，并且将元素逆置.&lt;/p&gt;
&lt;p&gt;(如原数组元素为：1,3,2,5,4; 逆置后输出结果为：4,5,2,3,1);&lt;/p&gt;
&lt;h4 id=&#34;523-冒泡排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#523-冒泡排序&#34;&gt;#&lt;/a&gt; 5.2.3 冒泡排序&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt; 最常用的排序算法，对数组内元素进行排序&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;比较相邻的元素。如果第一个比第二个大，就交换他们两个。&lt;/li&gt;
&lt;li&gt;对每一对相邻元素做同样的工作，执行完毕后，找到第一个最大值。&lt;/li&gt;
&lt;li&gt;重复以上的步骤，每次比较次数 - 1，直到不需要比较&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;![1541905327273](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/1541905327273.png)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt; 将数组 {4,2,8,0,5,7,1,3,9} 进行升序排序&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	int arr[9] = &amp;#123; 4,2,8,0,5,7,1,3,9 &amp;#125;;	for (int i = 0; i &amp;lt; 9 - 1; i++)	&amp;#123;		for (int j = 0; j &amp;lt; 9 - 1 - i; j++)		&amp;#123;			if (arr[j] &amp;gt; arr[j + 1])			&amp;#123;				int temp = arr[j];				arr[j] = arr[j + 1];				arr[j + 1] = temp;			&amp;#125;		&amp;#125;	&amp;#125;	for (int i = 0; i &amp;lt; 9; i++)	&amp;#123;		cout &amp;lt;&amp;lt; arr[i] &amp;lt;&amp;lt; endl;	&amp;#125;    	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;53-二维数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#53-二维数组&#34;&gt;#&lt;/a&gt; 5.3 二维数组&lt;/h3&gt;
&lt;p&gt;二维数组就是在一维数组上，多加一个维度。&lt;/p&gt;
&lt;p&gt;![1541905559138](../../../../Downloads/【黑马】C&lt;ins&gt; 教程从 0 到 1 入门编程，学习编程不再难 / 第 1 阶段 C&lt;/ins&gt; 匠心之作 从 0 到 1 入门资料 / 学习 C&lt;ins&gt; 不再难资料 / C&lt;/ins&gt; 基础入门讲义 /assets/1541905559138.png)&lt;/p&gt;
&lt;h4 id=&#34;531-二维数组定义方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#531-二维数组定义方式&#34;&gt;#&lt;/a&gt; 5.3.1 二维数组定义方式&lt;/h4&gt;
&lt;p&gt;二维数组定义的四种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;数据类型  数组名[ 行数 ][ 列数 ];&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;数据类型  数组名[ 行数 ][ 列数 ] = &amp;#123; &amp;#123;数据1，数据2 &amp;#125; ，&amp;#123;数据3，数据4 &amp;#125; &amp;#125;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;数据类型  数组名[ 行数 ][ 列数 ] = &amp;#123; 数据1，数据2，数据3，数据4&amp;#125;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt; 数据类型  数组名[  ][ 列数 ] = &amp;#123; 数据1，数据2，数据3，数据4&amp;#125;;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;建议：以上 4 种定义方式，利用&lt;mark&gt;第二种更加直观，提高代码的可读性&lt;/mark&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//方式1  	//数组类型 数组名 [行数][列数]	int arr[2][3];	arr[0][0] = 1;	arr[0][1] = 2;	arr[0][2] = 3;	arr[1][0] = 4;	arr[1][1] = 5;	arr[1][2] = 6;	for (int i = 0; i &amp;lt; 2; i++)	&amp;#123;		for (int j = 0; j &amp;lt; 3; j++)		&amp;#123;			cout &amp;lt;&amp;lt; arr[i][j] &amp;lt;&amp;lt; &amp;quot; &amp;quot;;		&amp;#125;		cout &amp;lt;&amp;lt; endl;	&amp;#125;	//方式2 	//数据类型 数组名[行数][列数] = &amp;#123; &amp;#123;数据1，数据2 &amp;#125; ，&amp;#123;数据3，数据4 &amp;#125; &amp;#125;;	int arr2[2][3] =	&amp;#123;		&amp;#123;1,2,3&amp;#125;,		&amp;#123;4,5,6&amp;#125;	&amp;#125;;	//方式3	//数据类型 数组名[行数][列数] = &amp;#123; 数据1，数据2 ,数据3，数据4  &amp;#125;;	int arr3[2][3] = &amp;#123; 1,2,3,4,5,6 &amp;#125;; 	//方式4 	//数据类型 数组名[][列数] = &amp;#123; 数据1，数据2 ,数据3，数据4  &amp;#125;;	int arr4[][3] = &amp;#123; 1,2,3,4,5,6 &amp;#125;;		system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：在定义二维数组时，如果初始化了数据，可以省略行数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;532-二维数组数组名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#532-二维数组数组名&#34;&gt;#&lt;/a&gt; 5.3.2 二维数组数组名&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;查看二维数组所占内存空间&lt;/li&gt;
&lt;li&gt;获取二维数组首地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//二维数组数组名	int arr[2][3] =	&amp;#123;		&amp;#123;1,2,3&amp;#125;,		&amp;#123;4,5,6&amp;#125;	&amp;#125;;	cout &amp;lt;&amp;lt; &amp;quot;二维数组大小： &amp;quot; &amp;lt;&amp;lt; sizeof(arr) &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;二维数组一行大小： &amp;quot; &amp;lt;&amp;lt; sizeof(arr[0]) &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;二维数组元素大小： &amp;quot; &amp;lt;&amp;lt; sizeof(arr[0][0]) &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;二维数组行数： &amp;quot; &amp;lt;&amp;lt; sizeof(arr) / sizeof(arr[0]) &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;二维数组列数： &amp;quot; &amp;lt;&amp;lt; sizeof(arr[0]) / sizeof(arr[0][0]) &amp;lt;&amp;lt; endl;	//地址	cout &amp;lt;&amp;lt; &amp;quot;二维数组首地址：&amp;quot; &amp;lt;&amp;lt; arr &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;二维数组第一行地址：&amp;quot; &amp;lt;&amp;lt; arr[0] &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;二维数组第二行地址：&amp;quot; &amp;lt;&amp;lt; arr[1] &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;二维数组第一个元素地址：&amp;quot; &amp;lt;&amp;lt; &amp;amp;arr[0][0] &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;二维数组第二个元素地址：&amp;quot; &amp;lt;&amp;lt; &amp;amp;arr[0][1] &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结 1：二维数组名就是这个数组的首地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;总结 2：对二维数组名进行 sizeof 时，可以获取整个二维数组占用的内存空间大小&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;533-二维数组应用案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#533-二维数组应用案例&#34;&gt;#&lt;/a&gt; &lt;strong&gt;5.3.3 二维数组应用案例&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;考试成绩统计：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;案例描述：有三名同学（张三，李四，王五），在一次考试中的成绩分别如下表，&lt;strong&gt;请分别输出三名同学的总成绩&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;语文&lt;/th&gt;
&lt;th&gt;数学&lt;/th&gt;
&lt;th&gt;英语&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;张三&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;李四&lt;/td&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;王五&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;参考答案：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	int scores[3][3] =	&amp;#123;		&amp;#123;100,100,100&amp;#125;,		&amp;#123;90,50,100&amp;#125;,		&amp;#123;60,70,80&amp;#125;,	&amp;#125;;	string names[3] = &amp;#123; &amp;quot;张三&amp;quot;,&amp;quot;李四&amp;quot;,&amp;quot;王五&amp;quot; &amp;#125;;	for (int i = 0; i &amp;lt; 3; i++)	&amp;#123;		int sum = 0;		for (int j = 0; j &amp;lt; 3; j++)		&amp;#123;			sum += scores[i][j];		&amp;#125;		cout &amp;lt;&amp;lt; names[i] &amp;lt;&amp;lt; &amp;quot;同学总成绩为： &amp;quot; &amp;lt;&amp;lt; sum &amp;lt;&amp;lt; endl;	&amp;#125;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;6-函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-函数&#34;&gt;#&lt;/a&gt; 6 函数&lt;/h2&gt;
&lt;h3 id=&#34;61-概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#61-概述&#34;&gt;#&lt;/a&gt; 6.1 概述&lt;/h3&gt;
&lt;p&gt;** 作用：** 将一段经常使用的代码封装起来，减少重复代码&lt;/p&gt;
&lt;p&gt;一个较大的程序，一般分为若干个程序块，每个模块实现特定的功能。&lt;/p&gt;
&lt;h3 id=&#34;62-函数的定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#62-函数的定义&#34;&gt;#&lt;/a&gt; 6.2 函数的定义&lt;/h3&gt;
&lt;p&gt;函数的定义一般主要有 5 个步骤：&lt;/p&gt;
&lt;p&gt;1、返回值类型&lt;/p&gt;
&lt;p&gt;2、函数名&lt;/p&gt;
&lt;p&gt;3、参数表列&lt;/p&gt;
&lt;p&gt;4、函数体语句&lt;/p&gt;
&lt;p&gt;5、return 表达式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;返回值类型 函数名 （参数列表）&amp;#123;       函数体语句       return表达式&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;返回值类型 ：一个函数可以返回一个值。在函数定义中&lt;/li&gt;
&lt;li&gt;函数名：给函数起个名称&lt;/li&gt;
&lt;li&gt;参数列表：使用该函数时，传入的数据&lt;/li&gt;
&lt;li&gt;函数体语句：花括号内的代码，函数内需要执行的语句&lt;/li&gt;
&lt;li&gt;return 表达式： 和返回值类型挂钩，函数执行完后，返回相应的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;** 示例：** 定义一个加法函数，实现两个数相加&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//函数定义int add(int num1, int num2)&amp;#123;	int sum = num1 + num2;	return sum;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;63-函数的调用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#63-函数的调用&#34;&gt;#&lt;/a&gt; 6.3 函数的调用&lt;/h3&gt;
&lt;p&gt;** 功能：** 使用定义好的函数&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt; &lt;code&gt; 函数名（参数）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//函数定义int add(int num1, int num2) //定义中的num1,num2称为形式参数，简称形参&amp;#123;	int sum = num1 + num2;	return sum;&amp;#125;int main() &amp;#123;	int a = 10;	int b = 10;	//调用add函数	int sum = add(a, b);//调用时的a，b称为实际参数，简称实参	cout &amp;lt;&amp;lt; &amp;quot;sum = &amp;quot; &amp;lt;&amp;lt; sum &amp;lt;&amp;lt; endl;	a = 100;	b = 100;	sum = add(a, b);	cout &amp;lt;&amp;lt; &amp;quot;sum = &amp;quot; &amp;lt;&amp;lt; sum &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：函数定义里小括号内称为形参，函数调用时传入的参数称为实参&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;64-值传递&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#64-值传递&#34;&gt;#&lt;/a&gt; 6.4 值传递&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;所谓值传递，就是函数调用时实参将数值传入给形参&lt;/li&gt;
&lt;li&gt;值传递时，&lt;mark&gt;如果形参发生，并不会影响实参&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;void swap(int num1, int num2)&amp;#123;	cout &amp;lt;&amp;lt; &amp;quot;交换前：&amp;quot; &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;num1 = &amp;quot; &amp;lt;&amp;lt; num1 &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;num2 = &amp;quot; &amp;lt;&amp;lt; num2 &amp;lt;&amp;lt; endl;	int temp = num1;	num1 = num2;	num2 = temp;	cout &amp;lt;&amp;lt; &amp;quot;交换后：&amp;quot; &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;num1 = &amp;quot; &amp;lt;&amp;lt; num1 &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;num2 = &amp;quot; &amp;lt;&amp;lt; num2 &amp;lt;&amp;lt; endl;	//return ; 当函数声明时候，不需要返回值，可以不写return&amp;#125;int main() &amp;#123;	int a = 10;	int b = 20;	swap(a, b);	cout &amp;lt;&amp;lt; &amp;quot;mian中的 a = &amp;quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;mian中的 b = &amp;quot; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结： 值传递时，形参是修饰不了实参的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;65-函数的常见样式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#65-函数的常见样式&#34;&gt;#&lt;/a&gt; &lt;strong&gt;6.5 函数的常见样式&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;常见的函数样式有 4 种&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无参无返&lt;/li&gt;
&lt;li&gt;有参无返&lt;/li&gt;
&lt;li&gt;无参有返&lt;/li&gt;
&lt;li&gt;有参有返&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//函数常见样式//1、 无参无返void test01()&amp;#123;	//void a = 10; //无类型不可以创建变量,原因无法分配内存	cout &amp;lt;&amp;lt; &amp;quot;this is test01&amp;quot; &amp;lt;&amp;lt; endl;	//test01(); 函数调用&amp;#125;//2、 有参无返void test02(int a)&amp;#123;	cout &amp;lt;&amp;lt; &amp;quot;this is test02&amp;quot; &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;a = &amp;quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl;&amp;#125;//3、无参有返int test03()&amp;#123;	cout &amp;lt;&amp;lt; &amp;quot;this is test03 &amp;quot; &amp;lt;&amp;lt; endl;	return 10;&amp;#125;//4、有参有返int test04(int a, int b)&amp;#123;	cout &amp;lt;&amp;lt; &amp;quot;this is test04 &amp;quot; &amp;lt;&amp;lt; endl;	int sum = a + b;	return sum;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;66-函数的声明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#66-函数的声明&#34;&gt;#&lt;/a&gt; 6.6 函数的声明&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt; 告诉编译器函数名称及如何调用函数。函数的实际主体可以单独定义。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;函数的&lt;strong&gt;声明可以多次&lt;/strong&gt;，但是函数的&lt;strong&gt;定义只能有一次&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//声明可以多次，定义只能一次//声明int max(int a, int b);int max(int a, int b);//定义int max(int a, int b)&amp;#123;	return a &amp;gt; b ? a : b;&amp;#125;int main() &amp;#123;	int a = 100;	int b = 200;	cout &amp;lt;&amp;lt; max(a, b) &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;67-函数的分文件编写&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#67-函数的分文件编写&#34;&gt;#&lt;/a&gt; 6.7 函数的分文件编写&lt;/h3&gt;
&lt;p&gt;** 作用：** 让代码结构更加清晰&lt;/p&gt;
&lt;p&gt;函数分文件编写一般有 4 个步骤&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建后缀名为.h 的头文件&lt;/li&gt;
&lt;li&gt;创建后缀名为.cpp 的源文件&lt;/li&gt;
&lt;li&gt;在头文件中写函数的声明&lt;/li&gt;
&lt;li&gt;在源文件中写函数的定义&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//swap.h文件#include&amp;lt;iostream&amp;gt;using namespace std;//实现两个数字交换的函数声明void swap(int a, int b);
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//swap.cpp文件#include &amp;quot;swap.h&amp;quot;void swap(int a, int b)&amp;#123;	int temp = a;	a = b;	b = temp;	cout &amp;lt;&amp;lt; &amp;quot;a = &amp;quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;b = &amp;quot; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; endl;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//main函数文件#include &amp;quot;swap.h&amp;quot;int main() &amp;#123;	int a = 100;	int b = 200;	swap(a, b);	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;7-指针&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-指针&#34;&gt;#&lt;/a&gt; 7 指针&lt;/h2&gt;
&lt;h3 id=&#34;71-指针的基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#71-指针的基本概念&#34;&gt;#&lt;/a&gt; 7.1 指针的基本概念&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;指针的作用：&lt;/strong&gt; 可以通过指针间接访问内存&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;内存编号是从 0 开始记录的，一般用十六进制数字表示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以利用指针变量保存地址&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;72-指针变量的定义和使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#72-指针变量的定义和使用&#34;&gt;#&lt;/a&gt; 7.2 指针变量的定义和使用&lt;/h3&gt;
&lt;p&gt;指针变量定义语法：  &lt;code&gt;数据类型 * 变量名；&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//1、指针的定义	int a = 10; //定义整型变量a		//指针定义语法： 数据类型 * 变量名 ;	int * p;	//指针变量赋值	p = &amp;amp;a; //指针指向变量a的地址	cout &amp;lt;&amp;lt; &amp;amp;a &amp;lt;&amp;lt; endl; //打印数据a的地址	cout &amp;lt;&amp;lt; p &amp;lt;&amp;lt; endl;  //打印指针变量p	//2、指针的使用	//通过*操作指针变量指向的内存	cout &amp;lt;&amp;lt; &amp;quot;*p = &amp;quot; &amp;lt;&amp;lt; *p &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;指针变量和普通变量的区别&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;普通变量存放的是数据，指针变量存放的是地址&lt;/li&gt;
&lt;li&gt;指针变量可以通过 &amp;quot;*&amp;quot; 操作符，操作指针变量指向的内存空间，这个过程称为解引用&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;总结 1： 我们可以通过 &amp;amp; 符号 获取变量的地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;总结 2：利用指针可以记录地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;总结 3：对指针变量解引用，可以操作指针指向的内存&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;73-指针所占内存空间&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#73-指针所占内存空间&#34;&gt;#&lt;/a&gt; 7.3 指针所占内存空间&lt;/h3&gt;
&lt;p&gt;提问：指针也是种数据类型，那么这种数据类型占用多少内存空间？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	int a = 10;	int * p;	p = &amp;amp;a; //指针指向数据a的地址	cout &amp;lt;&amp;lt; *p &amp;lt;&amp;lt; endl; //* 解引用	cout &amp;lt;&amp;lt; sizeof(p) &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; sizeof(char *) &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; sizeof(float *) &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; sizeof(double *) &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：所有指针类型在 32 位操作系统下是 4 个字节&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;74-空指针和野指针&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#74-空指针和野指针&#34;&gt;#&lt;/a&gt; 7.4 空指针和野指针&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;空指针&lt;/strong&gt;：指针变量指向内存中编号为 0 的空间&lt;/p&gt;
&lt;p&gt;** 用途：** 初始化指针变量&lt;/p&gt;
&lt;p&gt;** 注意：** 空指针指向的内存是不可以访问的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：空指针&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//指针变量p指向内存地址编号为0的空间	int * p = NULL;	//访问空指针报错 	//内存编号0 ~255为系统占用内存，不允许用户访问	cout &amp;lt;&amp;lt; *p &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;野指针&lt;/strong&gt;：指针变量指向非法的内存空间&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 2：野指针&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	//指针变量p指向内存地址编号为0x1100的空间	int * p = (int *)0x1100;	//访问野指针报错 	cout &amp;lt;&amp;lt; *p &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：空指针和野指针都不是我们申请的空间，因此不要访问。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;75-const修饰指针&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#75-const修饰指针&#34;&gt;#&lt;/a&gt; 7.5 const 修饰指针&lt;/h3&gt;
&lt;p&gt;const 修饰指针有三种情况&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;const 修饰指针   --- 常量指针&lt;/li&gt;
&lt;li&gt;const 修饰常量   --- 指针常量&lt;/li&gt;
&lt;li&gt;const 即修饰指针，又修饰常量&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;int main() &amp;#123;	int a = 10;	int b = 10;	//const修饰的是指针，指针指向可以改，指针指向的值不可以更改	const int * p1 = &amp;amp;a; 	p1 = &amp;amp;b; //正确	//*p1 = 100;  报错		//const修饰的是常量，指针指向不可以改，指针指向的值可以更改	int * const p2 = &amp;amp;a;	//p2 = &amp;amp;b; //错误	*p2 = 100; //正确    //const既修饰指针又修饰常量	const int * const p3 = &amp;amp;a;	//p3 = &amp;amp;b; //错误	//*p3 = 100; //错误	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;技巧：看 const 右侧紧跟着的是指针还是常量，是指针就是常量指针，是常量就是指针常量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;76-指针和数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#76-指针和数组&#34;&gt;#&lt;/a&gt; 7.6 指针和数组&lt;/h3&gt;
&lt;p&gt;** 作用：** 利用指针访问数组中元素&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;int main() &amp;#123;	int arr[] = &amp;#123; 1,2,3,4,5,6,7,8,9,10 &amp;#125;;	int * p = arr;  //指向数组的指针	cout &amp;lt;&amp;lt; &amp;quot;第一个元素： &amp;quot; &amp;lt;&amp;lt; arr[0] &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;指针访问第一个元素： &amp;quot; &amp;lt;&amp;lt; *p &amp;lt;&amp;lt; endl;	for (int i = 0; i &amp;lt; 10; i++)	&amp;#123;		//利用指针遍历数组		cout &amp;lt;&amp;lt; *p &amp;lt;&amp;lt; endl;		p++;	&amp;#125;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;77-指针和函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#77-指针和函数&#34;&gt;#&lt;/a&gt; 7.7 指针和函数&lt;/h3&gt;
&lt;p&gt;** 作用：** 利用指针作函数参数，可以修改实参的值&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//值传递void swap1(int a ,int b)&amp;#123;	int temp = a;	a = b; 	b = temp;&amp;#125;//地址传递void swap2(int * p1, int *p2)&amp;#123;	int temp = *p1;	*p1 = *p2;	*p2 = temp;&amp;#125;int main() &amp;#123;	int a = 10;	int b = 20;	swap1(a, b); // 值传递不会改变实参	swap2(&amp;amp;a, &amp;amp;b); //地址传递会改变实参	cout &amp;lt;&amp;lt; &amp;quot;a = &amp;quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; &amp;quot;b = &amp;quot; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：如果不想修改实参，就用值传递，如果想修改实参，就用地址传递&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;78-指针-数组-函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#78-指针-数组-函数&#34;&gt;#&lt;/a&gt; 7.8 指针、数组、函数&lt;/h3&gt;
&lt;p&gt;** 案例描述：** 封装一个函数，利用冒泡排序，实现对整型数组的升序排序&lt;/p&gt;
&lt;p&gt;例如数组：int arr [10] = { 4,3,6,9,1,2,10,8,7,5 };&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;//冒泡排序函数void bubbleSort(int * arr, int len)  //int * arr 也可以写为int arr[]&amp;#123;	for (int i = 0; i &amp;lt; len - 1; i++)	&amp;#123;		for (int j = 0; j &amp;lt; len - 1 - i; j++)		&amp;#123;			if (arr[j] &amp;gt; arr[j + 1])			&amp;#123;				int temp = arr[j];				arr[j] = arr[j + 1];				arr[j + 1] = temp;			&amp;#125;		&amp;#125;	&amp;#125;&amp;#125;//打印数组函数void printArray(int arr[], int len)&amp;#123;	for (int i = 0; i &amp;lt; len; i++)	&amp;#123;		cout &amp;lt;&amp;lt; arr[i] &amp;lt;&amp;lt; endl;	&amp;#125;&amp;#125;int main() &amp;#123;	int arr[10] = &amp;#123; 4,3,6,9,1,2,10,8,7,5 &amp;#125;;	int len = sizeof(arr) / sizeof(int);	bubbleSort(arr, len);	printArray(arr, len);	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：当数组名传入到函数作为参数时，被退化为指向首元素的指针&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;8-结构体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8-结构体&#34;&gt;#&lt;/a&gt; 8 结构体&lt;/h2&gt;
&lt;h3 id=&#34;81-结构体基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#81-结构体基本概念&#34;&gt;#&lt;/a&gt; 8.1 结构体基本概念&lt;/h3&gt;
&lt;p&gt;结构体属于用户&lt;mark&gt;自定义的数据类型&lt;/mark&gt;，允许用户存储不同的数据类型&lt;/p&gt;
&lt;h3 id=&#34;82-结构体定义和使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#82-结构体定义和使用&#34;&gt;#&lt;/a&gt; 8.2 结构体定义和使用&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt; &lt;code&gt;struct 结构体名 &amp;#123; 结构体成员列表 &amp;#125;；&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通过结构体创建变量的方式有三种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;struct 结构体名 变量名&lt;/li&gt;
&lt;li 成员1值=&#34;&#34; ，=&#34;&#34; 成员2值...=&#34;&#34;&gt;struct 结构体名 变量名 =&lt;/li&gt;
&lt;li&gt;定义结构体时顺便创建变量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//结构体定义struct student&amp;#123;	//成员列表	string name;  //姓名	int age;      //年龄	int score;    //分数&amp;#125;stu3; //结构体变量创建方式3 int main() &amp;#123;	//结构体变量创建方式1	struct student stu1; //struct 关键字可以省略	stu1.name = &amp;quot;张三&amp;quot;;	stu1.age = 18;	stu1.score = 100;		cout &amp;lt;&amp;lt; &amp;quot;姓名：&amp;quot; &amp;lt;&amp;lt; stu1.name &amp;lt;&amp;lt; &amp;quot; 年龄：&amp;quot; &amp;lt;&amp;lt; stu1.age  &amp;lt;&amp;lt; &amp;quot; 分数：&amp;quot; &amp;lt;&amp;lt; stu1.score &amp;lt;&amp;lt; endl;	//结构体变量创建方式2	struct student stu2 = &amp;#123; &amp;quot;李四&amp;quot;,19,60 &amp;#125;;	cout &amp;lt;&amp;lt; &amp;quot;姓名：&amp;quot; &amp;lt;&amp;lt; stu2.name &amp;lt;&amp;lt; &amp;quot; 年龄：&amp;quot; &amp;lt;&amp;lt; stu2.age  &amp;lt;&amp;lt; &amp;quot; 分数：&amp;quot; &amp;lt;&amp;lt; stu2.score &amp;lt;&amp;lt; endl;	stu3.name = &amp;quot;王五&amp;quot;;	stu3.age = 18;	stu3.score = 80;		cout &amp;lt;&amp;lt; &amp;quot;姓名：&amp;quot; &amp;lt;&amp;lt; stu3.name &amp;lt;&amp;lt; &amp;quot; 年龄：&amp;quot; &amp;lt;&amp;lt; stu3.age  &amp;lt;&amp;lt; &amp;quot; 分数：&amp;quot; &amp;lt;&amp;lt; stu3.score &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结 1：定义结构体时的关键字是 struct，不可省略&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;总结 2：创建结构体变量时，关键字 struct 可以省略&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;总结 3：结构体变量利用操作符 &#39;&#39;.&#39;&#39;  访问成员&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;83-结构体数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#83-结构体数组&#34;&gt;#&lt;/a&gt; 8.3 结构体数组&lt;/h3&gt;
&lt;p&gt;** 作用：** 将自定义的结构体放入到数组中方便维护&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt; &lt;code&gt; struct  结构体名 数组名[元素个数] = &amp;#123;  &amp;#123;&amp;#125; , &amp;#123;&amp;#125; , ... &amp;#123;&amp;#125; &amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//结构体定义struct student&amp;#123;	//成员列表	string name;  //姓名	int age;      //年龄	int score;    //分数&amp;#125;int main() &amp;#123;		//结构体数组	struct student arr[3]=	&amp;#123;		&amp;#123;&amp;quot;张三&amp;quot;,18,80 &amp;#125;,		&amp;#123;&amp;quot;李四&amp;quot;,19,60 &amp;#125;,		&amp;#123;&amp;quot;王五&amp;quot;,20,70 &amp;#125;	&amp;#125;;	for (int i = 0; i &amp;lt; 3; i++)	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;姓名：&amp;quot; &amp;lt;&amp;lt; arr[i].name &amp;lt;&amp;lt; &amp;quot; 年龄：&amp;quot; &amp;lt;&amp;lt; arr[i].age &amp;lt;&amp;lt; &amp;quot; 分数：&amp;quot; &amp;lt;&amp;lt; arr[i].score &amp;lt;&amp;lt; endl;	&amp;#125;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;84-结构体指针&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#84-结构体指针&#34;&gt;#&lt;/a&gt; 8.4 结构体指针&lt;/h3&gt;
&lt;p&gt;** 作用：** 通过指针访问结构体中的成员&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用操作符  &lt;code&gt;-&amp;gt; &lt;/code&gt; 可以通过结构体指针访问结构体属性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//结构体定义struct student&amp;#123;	//成员列表	string name;  //姓名	int age;      //年龄	int score;    //分数&amp;#125;;int main() &amp;#123;		struct student stu = &amp;#123; &amp;quot;张三&amp;quot;,18,100, &amp;#125;;		struct student * p = &amp;amp;stu;		p-&amp;gt;score = 80; //指针通过 -&amp;gt; 操作符可以访问成员	cout &amp;lt;&amp;lt; &amp;quot;姓名：&amp;quot; &amp;lt;&amp;lt; p-&amp;gt;name &amp;lt;&amp;lt; &amp;quot; 年龄：&amp;quot; &amp;lt;&amp;lt; p-&amp;gt;age &amp;lt;&amp;lt; &amp;quot; 分数：&amp;quot; &amp;lt;&amp;lt; p-&amp;gt;score &amp;lt;&amp;lt; endl;		system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：结构体指针可以通过 -&amp;gt; 操作符 来访问结构体中的成员&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;85-结构体嵌套结构体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#85-结构体嵌套结构体&#34;&gt;#&lt;/a&gt; 8.5 结构体嵌套结构体&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt; 结构体中的成员可以是另一个结构体&lt;/p&gt;
&lt;p&gt;** 例如：** 每个老师辅导一个学员，一个老师的结构体中，记录一个学生的结构体&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//学生结构体定义struct student&amp;#123;	//成员列表	string name;  //姓名	int age;      //年龄	int score;    //分数&amp;#125;;//教师结构体定义struct teacher&amp;#123;    //成员列表	int id; //职工编号	string name;  //教师姓名	int age;   //教师年龄	struct student stu; //子结构体 学生&amp;#125;;int main() &amp;#123;	struct teacher t1;	t1.id = 10000;	t1.name = &amp;quot;老王&amp;quot;;	t1.age = 40;	t1.stu.name = &amp;quot;张三&amp;quot;;	t1.stu.age = 18;	t1.stu.score = 100;	cout &amp;lt;&amp;lt; &amp;quot;教师 职工编号： &amp;quot; &amp;lt;&amp;lt; t1.id &amp;lt;&amp;lt; &amp;quot; 姓名： &amp;quot; &amp;lt;&amp;lt; t1.name &amp;lt;&amp;lt; &amp;quot; 年龄： &amp;quot; &amp;lt;&amp;lt; t1.age &amp;lt;&amp;lt; endl;		cout &amp;lt;&amp;lt; &amp;quot;辅导学员 姓名： &amp;quot; &amp;lt;&amp;lt; t1.stu.name &amp;lt;&amp;lt; &amp;quot; 年龄：&amp;quot; &amp;lt;&amp;lt; t1.stu.age &amp;lt;&amp;lt; &amp;quot; 考试分数： &amp;quot; &amp;lt;&amp;lt; t1.stu.score &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;** 总结：** 在结构体中可以定义另一个结构体作为成员，用来解决实际问题&lt;/p&gt;
&lt;h3 id=&#34;86-结构体做函数参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#86-结构体做函数参数&#34;&gt;#&lt;/a&gt; 8.6 结构体做函数参数&lt;/h3&gt;
&lt;p&gt;** 作用：** 将结构体作为参数向函数中传递&lt;/p&gt;
&lt;p&gt;传递方式有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;值传递&lt;/li&gt;
&lt;li&gt;地址传递&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//学生结构体定义struct student&amp;#123;	//成员列表	string name;  //姓名	int age;      //年龄	int score;    //分数&amp;#125;;//值传递void printStudent(student stu )&amp;#123;	stu.age = 28;	cout &amp;lt;&amp;lt; &amp;quot;子函数中 姓名：&amp;quot; &amp;lt;&amp;lt; stu.name &amp;lt;&amp;lt; &amp;quot; 年龄： &amp;quot; &amp;lt;&amp;lt; stu.age  &amp;lt;&amp;lt; &amp;quot; 分数：&amp;quot; &amp;lt;&amp;lt; stu.score &amp;lt;&amp;lt; endl;&amp;#125;//地址传递void printStudent2(student *stu)&amp;#123;	stu-&amp;gt;age = 28;	cout &amp;lt;&amp;lt; &amp;quot;子函数中 姓名：&amp;quot; &amp;lt;&amp;lt; stu-&amp;gt;name &amp;lt;&amp;lt; &amp;quot; 年龄： &amp;quot; &amp;lt;&amp;lt; stu-&amp;gt;age  &amp;lt;&amp;lt; &amp;quot; 分数：&amp;quot; &amp;lt;&amp;lt; stu-&amp;gt;score &amp;lt;&amp;lt; endl;&amp;#125;int main() &amp;#123;	student stu = &amp;#123; &amp;quot;张三&amp;quot;,18,100&amp;#125;;	//值传递	printStudent(stu);	cout &amp;lt;&amp;lt; &amp;quot;主函数中 姓名：&amp;quot; &amp;lt;&amp;lt; stu.name &amp;lt;&amp;lt; &amp;quot; 年龄： &amp;quot; &amp;lt;&amp;lt; stu.age &amp;lt;&amp;lt; &amp;quot; 分数：&amp;quot; &amp;lt;&amp;lt; stu.score &amp;lt;&amp;lt; endl;	cout &amp;lt;&amp;lt; endl;	//地址传递	printStudent2(&amp;amp;stu);	cout &amp;lt;&amp;lt; &amp;quot;主函数中 姓名：&amp;quot; &amp;lt;&amp;lt; stu.name &amp;lt;&amp;lt; &amp;quot; 年龄： &amp;quot; &amp;lt;&amp;lt; stu.age  &amp;lt;&amp;lt; &amp;quot; 分数：&amp;quot; &amp;lt;&amp;lt; stu.score &amp;lt;&amp;lt; endl;	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;总结：如果不想修改主函数中的数据，用值传递，反之用地址传递&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;87-结构体中-const使用场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#87-结构体中-const使用场景&#34;&gt;#&lt;/a&gt; 8.7 结构体中 const 使用场景&lt;/h3&gt;
&lt;p&gt;** 作用：** 用 const 来防止误操作&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//学生结构体定义struct student&amp;#123;	//成员列表	string name;  //姓名	int age;      //年龄	int score;    //分数&amp;#125;;//const使用场景void printStudent(const student *stu) //加const防止函数体中的误操作&amp;#123;	//stu-&amp;gt;age = 100; //操作失败，因为加了const修饰	cout &amp;lt;&amp;lt; &amp;quot;姓名：&amp;quot; &amp;lt;&amp;lt; stu-&amp;gt;name &amp;lt;&amp;lt; &amp;quot; 年龄：&amp;quot; &amp;lt;&amp;lt; stu-&amp;gt;age &amp;lt;&amp;lt; &amp;quot; 分数：&amp;quot; &amp;lt;&amp;lt; stu-&amp;gt;score &amp;lt;&amp;lt; endl;&amp;#125;int main() &amp;#123;	student stu = &amp;#123; &amp;quot;张三&amp;quot;,18,100 &amp;#125;;	printStudent(&amp;amp;stu);	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;88-结构体案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#88-结构体案例&#34;&gt;#&lt;/a&gt; 8.8 结构体案例&lt;/h3&gt;
&lt;h4 id=&#34;881-案例1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#881-案例1&#34;&gt;#&lt;/a&gt; 8.8.1 案例 1&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;案例描述：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;学校正在做毕设项目，每名老师带领 5 个学生，总共有 3 名老师，需求如下&lt;/p&gt;
&lt;p&gt;设计学生和老师的结构体，其中在老师的结构体中，有老师姓名和一个存放 5 名学生的数组作为成员&lt;/p&gt;
&lt;p&gt;学生的成员有姓名、考试分数，创建数组存放 3 名老师，通过函数给每个老师及所带的学生赋值&lt;/p&gt;
&lt;p&gt;最终打印出老师数据以及老师所带的学生数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;struct Student&amp;#123;	string name;	int score;&amp;#125;;struct Teacher&amp;#123;	string name;	Student sArray[5];&amp;#125;;void allocateSpace(Teacher tArray[] , int len)&amp;#123;	string tName = &amp;quot;教师&amp;quot;;	string sName = &amp;quot;学生&amp;quot;;	string nameSeed = &amp;quot;ABCDE&amp;quot;;	for (int i = 0; i &amp;lt; len; i++)	&amp;#123;		tArray[i].name = tName + nameSeed[i];				for (int j = 0; j &amp;lt; 5; j++)		&amp;#123;			tArray[i].sArray[j].name = sName + nameSeed[j];			tArray[i].sArray[j].score = rand() % 61 + 40;		&amp;#125;	&amp;#125;&amp;#125;void printTeachers(Teacher tArray[], int len)&amp;#123;	for (int i = 0; i &amp;lt; len; i++)	&amp;#123;		cout &amp;lt;&amp;lt; tArray[i].name &amp;lt;&amp;lt; endl;		for (int j = 0; j &amp;lt; 5; j++)		&amp;#123;			cout &amp;lt;&amp;lt; &amp;quot;\t姓名：&amp;quot; &amp;lt;&amp;lt; tArray[i].sArray[j].name &amp;lt;&amp;lt; &amp;quot; 分数：&amp;quot; &amp;lt;&amp;lt; tArray[i].sArray[j].score &amp;lt;&amp;lt; endl;		&amp;#125;	&amp;#125;&amp;#125;int main() &amp;#123;	srand((unsigned int)time(NULL)); //随机数种子 头文件 #include &amp;lt;ctime&amp;gt;	Teacher tArray[3]; //老师数组	int len = sizeof(tArray) / sizeof(Teacher);	allocateSpace(tArray, len); //创建数据	printTeachers(tArray, len); //打印数据		system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;882-案例2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#882-案例2&#34;&gt;#&lt;/a&gt; 8.8.2 案例 2&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;案例描述：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设计一个英雄的结构体，包括成员姓名，年龄，性别；创建结构体数组，数组中存放 5 名英雄。&lt;/p&gt;
&lt;p&gt;通过冒泡排序的算法，将数组中的英雄按照年龄进行升序排序，最终打印排序后的结果。&lt;/p&gt;
&lt;p&gt;五名英雄信息如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;		&amp;#123;&amp;quot;刘备&amp;quot;,23,&amp;quot;男&amp;quot;&amp;#125;,		&amp;#123;&amp;quot;关羽&amp;quot;,22,&amp;quot;男&amp;quot;&amp;#125;,		&amp;#123;&amp;quot;张飞&amp;quot;,20,&amp;quot;男&amp;quot;&amp;#125;,		&amp;#123;&amp;quot;赵云&amp;quot;,21,&amp;quot;男&amp;quot;&amp;#125;,		&amp;#123;&amp;quot;貂蝉&amp;quot;,19,&amp;quot;女&amp;quot;&amp;#125;,
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//英雄结构体struct hero&amp;#123;	string name;	int age;	string sex;&amp;#125;;//冒泡排序void bubbleSort(hero arr[] , int len)&amp;#123;	for (int i = 0; i &amp;lt; len - 1; i++)	&amp;#123;		for (int j = 0; j &amp;lt; len - 1 - i; j++)		&amp;#123;			if (arr[j].age &amp;gt; arr[j + 1].age)			&amp;#123;				hero temp = arr[j];				arr[j] = arr[j + 1];				arr[j + 1] = temp;			&amp;#125;		&amp;#125;	&amp;#125;&amp;#125;//打印数组void printHeros(hero arr[], int len)&amp;#123;	for (int i = 0; i &amp;lt; len; i++)	&amp;#123;		cout &amp;lt;&amp;lt; &amp;quot;姓名： &amp;quot; &amp;lt;&amp;lt; arr[i].name &amp;lt;&amp;lt; &amp;quot; 性别： &amp;quot; &amp;lt;&amp;lt; arr[i].sex &amp;lt;&amp;lt; &amp;quot; 年龄： &amp;quot; &amp;lt;&amp;lt; arr[i].age &amp;lt;&amp;lt; endl;	&amp;#125;&amp;#125;int main() &amp;#123;	struct hero arr[5] =	&amp;#123;		&amp;#123;&amp;quot;刘备&amp;quot;,23,&amp;quot;男&amp;quot;&amp;#125;,		&amp;#123;&amp;quot;关羽&amp;quot;,22,&amp;quot;男&amp;quot;&amp;#125;,		&amp;#123;&amp;quot;张飞&amp;quot;,20,&amp;quot;男&amp;quot;&amp;#125;,		&amp;#123;&amp;quot;赵云&amp;quot;,21,&amp;quot;男&amp;quot;&amp;#125;,		&amp;#123;&amp;quot;貂蝉&amp;quot;,19,&amp;quot;女&amp;quot;&amp;#125;,	&amp;#125;;	int len = sizeof(arr) / sizeof(hero); //获取数组元素个数	bubbleSort(arr, len); //排序	printHeros(arr, len); //打印	system(&amp;quot;pause&amp;quot;);	return 0;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="编程基础" scheme="https://zengshengli775.gitee.io/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/" />
        <category term="C++" scheme="https://zengshengli775.gitee.io/tags/C/" />
        <updated>2021-08-26T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/26/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/PS4%E4%BB%A3%E7%90%86%E4%B8%8A%E7%BD%91/</id>
        <title>PS4代理上网</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/26/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/PS4%E4%BB%A3%E7%90%86%E4%B8%8A%E7%BD%91/"/>
        <content type="html">&lt;h2 id=&#34;ps4代理上网&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ps4代理上网&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbWFpbG5jdWVkdWNuLW15LnNoYXJlcG9pbnQuY29tLzp0Oi9nL3BlcnNvbmFsLzYxMDgxMTkwOTRfZW1haWxfbmN1X2VkdV9jbi9FVUpzc0JPV1pwZElnUWxEVDQ0eFZYUUJjVzZxT1pHcFdpanBJYlFLeDh0NXZBP2U9NEx2MFY3&#34;&gt;PS4 代理上网&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;gitee 净网，有敏感字，无法部署，请转至&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbWFpbG5jdWVkdWNuLW15LnNoYXJlcG9pbnQuY29tLzp0Oi9nL3BlcnNvbmFsLzYxMDgxMTkwOTRfZW1haWxfbmN1X2VkdV9jbi9FVUpzc0JPV1pwZElnUWxEVDQ0eFZYUUJjVzZxT1pHcFdpanBJYlFLeDh0NXZBP2U9NEx2MFY3&#34;&gt; onedriver&lt;/span&gt; 下载浏览。&lt;/p&gt;
</content>
        <category term="实用技巧" scheme="https://zengshengli775.gitee.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/" />
        <category term="PS4" scheme="https://zengshengli775.gitee.io/tags/PS4/" />
        <updated>2021-08-25T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/26/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/</id>
        <title>机器学习基础</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/26/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/"/>
        <content type="html"></content>
        <category term="机器学习" scheme="https://zengshengli775.gitee.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/" />
        <category term="机器学习" scheme="https://zengshengli775.gitee.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/" />
        <updated>2021-08-25T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/</id>
        <title>数据结构与算法基础</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
        <content type="html"></content>
        <category term="数据结构与算法" scheme="https://zengshengli775.gitee.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/" />
        <category term="数据结构与算法" scheme="https://zengshengli775.gitee.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/" />
        <updated>2021-08-25T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/25/%E7%A7%91%E7%A0%94/%E7%A7%91%E7%A0%94%E6%96%87%E7%8C%AE%E7%BD%91%E7%AB%99/</id>
        <title>科研文献网站</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/25/%E7%A7%91%E7%A0%94/%E7%A7%91%E7%A0%94%E6%96%87%E7%8C%AE%E7%BD%91%E7%AB%99/"/>
        <content type="html">&lt;h2 id=&#34;科研文献网站&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#科研文献网站&#34;&gt;#&lt;/a&gt; 科研文献网站&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc3RvcmthcHAubWUvP3JlZj05MzYxNy0xMQ==&#34;&gt;文献鸟 Stork，您忠实的科研助手，追踪新文献&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="科研" scheme="https://zengshengli775.gitee.io/categories/%E7%A7%91%E7%A0%94/" />
        <category term="科研文献网站" scheme="https://zengshengli775.gitee.io/tags/%E7%A7%91%E7%A0%94%E6%96%87%E7%8C%AE%E7%BD%91%E7%AB%99/" />
        <updated>2021-08-24T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/25/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/Mac%20VScode%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
        <title>Mac VScode快捷键</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/25/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/Mac%20VScode%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
        <content type="html">&lt;h2 id=&#34;全局&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#全局&#34;&gt;#&lt;/a&gt; 全局&lt;/h2&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + P &amp;#x2F; F1 显示命令面板&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + P 快速打开&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + N 打开新窗口&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + W 关闭窗口&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Option + Esc 强制退出软件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;基本&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本&#34;&gt;#&lt;/a&gt; 基本&lt;/h2&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + X 剪切（未选中文本的情况下，剪切光标所在行）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + C 复制（未选中文本的情况下，复制光标所在行）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Option + Up 向上移动行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Option + Down 向下移动行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Option + Shift + Up 向上复制行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Option + Shift + Down 向下复制行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + K 删除行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Enter 下一行插入&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + Enter 上一行插入&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + \ 跳转到匹配的括号&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + [ 减少缩进&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + ] 增加缩进&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Home 跳转至行首&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;End 跳转到行尾&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Up 跳转至文件开头&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Down 跳转至文件结尾&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ctrl + PgUp 按行向上滚动&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ctrl + PgDown 按行向下滚动&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + PgUp 按屏向上滚动&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + PgDown 按屏向下滚动&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + [ 折叠代码块&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + ] 展开代码块&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + [ 折叠全部子代码块&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + ] 展开全部子代码块&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + 0 折叠全部代码块&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + J 展开全部代码块&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + C 添加行注释&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + U 移除行注释&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + &amp;#x2F; 添加、移除行注释&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Option + Shift + A 添加、移除块注释&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Option + Z 自动换行、取消自动换行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;多光标与选择&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多光标与选择&#34;&gt;#&lt;/a&gt; 多光标与选择&lt;/h2&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Option + 点击 插入多个光标&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Option + Up 向上插入光标&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Option + Down 向下插入光标&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + U 撤销上一个光标操作&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Option + Shift + I 在所选行的行尾插入光标&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + I 选中当前行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + L 选中所有与当前选中内容相同部分&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + F2 选中所有与当前选中单词相同的单词&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Ctrl + Shift + Left 折叠选中&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Ctrl + Shift + Right 展开选中&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Alt + Shift + 拖动鼠标 选中代码块&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + Option + Up 列选择 向上&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + Option + Down 列选择 向下&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + Option + Left 列选择 向左&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + Option + Right 列选择 向右&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + Option + PgUp 列选择 向上翻页&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + Option + PgDown 列选择 向下翻页&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;查找替换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查找替换&#34;&gt;#&lt;/a&gt; 查找替换&lt;/h2&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + F 查找&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Option + F 替换&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + G 查找下一个&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + G 查找上一个&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Option + Enter 选中所有匹配项&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + D 向下选中相同内容&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + D 移除前一个向下选中相同内容&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;进阶&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#进阶&#34;&gt;#&lt;/a&gt; 进阶&lt;/h2&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ctrl + Space 打开建议&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + Space 参数提示&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Tab Emmet 插件缩写补全&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Option + Shift + F 格式化&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + F 格式化选中内容&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;F12 跳转到声明位置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Option + F12 查看具体声明内容&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K F12 分屏查看具体声明内容&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + . 快速修复&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Shift + F12 显示引用&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;F2 重命名符号&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + . 替换为上一个值&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + , 替换为下一个值&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + X 删除行尾多余空格&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K M 更改文件语言&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;导航&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#导航&#34;&gt;#&lt;/a&gt; 导航&lt;/h2&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + T 显示所有符号&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ctrl + G 跳转至某行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + P 跳转到某个文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + O 跳转到某个符号&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + M 打开问题面板&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;F8 下一个错误或警告位置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Shift + F8 上一个错误或警告位置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ctrl + Shift + Tab 编辑器历史记录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ctrl + - 后退&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ctrl + Shift + - 前进&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ctrl + Shift + M Tab 切换焦点&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;编辑器管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编辑器管理&#34;&gt;#&lt;/a&gt; 编辑器管理&lt;/h2&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + W 关闭编辑器&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K F 关闭文件夹&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + \ 编辑器分屏&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + 1 切换到第一分组&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + 2 切换到第二分组&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + 3 切换到第三分组&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + Left 切换到上一分组&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + Right 切换到下一分组&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + Shift + Left 左移编辑器&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + Shift + Right 右移编辑器&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Left 激活左侧编辑组&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Right 激活右侧编辑组&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;文件管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件管理&#34;&gt;#&lt;/a&gt; 文件管理&lt;/h2&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + N 新建文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + O 打开文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + S 保存文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + S 另存为&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Option + S 全部保存&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + W 关闭&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + W 全部关闭&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + T 重新打开被关闭的编辑器&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Enter 保持打开&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ctrl + Tab 打开下一个&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ctrl + Shift + Tab 打开上一个&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K P 复制当前文件路径&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K R 在资源管理器中查看当前文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K O 新窗口打开当前文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;显示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#显示&#34;&gt;#&lt;/a&gt; 显示&lt;/h2&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Ctrl + F 全屏、退出全屏&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Option + 1 切换编辑器分屏方式（横、竖）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + + 放大&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + - 缩小&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + B 显示、隐藏侧边栏&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + E 显示资源管理器 或 切换焦点&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + F 显示搜索框&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ctrl + Shift + G 显示 Git 面板&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + D 显示调试面板&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + X 显示插件面板&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + H 全局搜索替换&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + J 显示、隐藏高级搜索&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + C 打开新终端&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + U 显示输出面板&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Shift + V Markdown 预览窗口&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K V 分屏显示 Markdown 预览窗口&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;调试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#调试&#34;&gt;#&lt;/a&gt; 调试&lt;/h2&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;F9 设置 或 取消断点&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;F5 开始 或 继续&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;F11 进入&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Shift + F11 跳出&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;F10 跳过&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + K Command + I 显示悬停信息&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;集成终端&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集成终端&#34;&gt;#&lt;/a&gt; 集成终端&lt;/h2&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ctrl + &amp;#96; 显示终端&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ctrl + Shift + &amp;#96; 新建终端&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Up 向上滚动&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Down 向下滚动&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;PgUp 向上翻页&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;PgDown 向下翻页&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + Home 滚动到顶部&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Command + End 滚动到底部&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="实用技巧" scheme="https://zengshengli775.gitee.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/" />
        <category term="Mac" scheme="https://zengshengli775.gitee.io/tags/Mac/" />
        <updated>2021-08-24T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/23/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/Chrome%E5%9C%A8%E7%BA%BF%E8%A7%86%E9%A2%91%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E5%AD%97%E5%B9%95/</id>
        <title>Chrome在线视频自动生成字幕</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/23/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/Chrome%E5%9C%A8%E7%BA%BF%E8%A7%86%E9%A2%91%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E5%AD%97%E5%B9%95/"/>
        <content type="html">&lt;h2 id=&#34;步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#步骤&#34;&gt;#&lt;/a&gt; 步骤&lt;/h2&gt;
&lt;p&gt;安装 Chrome 浏览器正式版最新版本，在地址栏输入：&lt;/p&gt;
&lt;p&gt;chrome://flags/#enable-accessibility-live-captions&lt;/p&gt;
&lt;p&gt;然后把 Default 选项更改为 Enabled。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://ww1.sinaimg.cn/large/007QGucbly1gtqr2wnd36j60rt087q6s02.jpg&#34; alt=&#34;download.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;根据提示重启浏览器。&lt;/p&gt;
&lt;p&gt;再在浏览器的设置页面，点击高级 - 无障碍。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://ww1.sinaimg.cn/large/007QGucbly1gtqr2wl8jzj609x08rjrv02.jpg&#34; alt=&#34;download-1.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;接着勾选开启为您的媒体生成字幕这个选项。接着勾选开启为您的媒体生成字幕这个选项。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://ww1.sinaimg.cn/large/007QGucbly1gtqr2wnkfnj60mi04nt8o02.jpg&#34; alt=&#34;download.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;设置好以后，当你再次在网页里播放视频时，视频下方将会出现一个新的灰色工具栏，生成的字幕将会不断出现在灰色工具栏中。&lt;/p&gt;
</content>
        <category term="实用技巧" scheme="https://zengshengli775.gitee.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/" />
        <category term="字幕" scheme="https://zengshengli775.gitee.io/tags/%E5%AD%97%E5%B9%95/" />
        <updated>2021-08-22T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/19/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84*%E5%92%8C&amp;%E7%AC%A6%E5%8F%B7/</id>
        <title>C语言中的*和&amp;符号</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/19/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84*%E5%92%8C&amp;%E7%AC%A6%E5%8F%B7/"/>
        <content type="html">&lt;h2 id=&#34;c语言中的和符号&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#c语言中的和符号&#34;&gt;#&lt;/a&gt; C 语言中的 * 和 &amp;amp; 符号&lt;/h2&gt;
&lt;p&gt;之前对 * 和 &amp;amp; 符号一直理解的比较浅显。只知道：&lt;br /&gt;
*p 好像表示的是一个指针；&lt;br /&gt;
&amp;amp;p 表示的是一个地址。&lt;br /&gt;
然而这次当遇到了下面这个情况的时候：&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;a；&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;“&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;d\n”&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;“&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;d\n”&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;“&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;d\n”&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;“&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;d\n”&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;结果：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;6487620&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;6487620&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;一脸懵逼，为什么 &amp;amp; a 和 * b 的值不是一样？这才发现自己其实一点都没有搞懂。&lt;/p&gt;
&lt;p&gt;经过学习后，总结出来：&lt;br /&gt;
&lt;strong&gt;变量 a 本质上代表一个存储单元&lt;/strong&gt;。CPU 通过该存储单元的地址访问该存储单元中的数据。所以&lt;strong&gt; a 本来代表两个值：存储单元的地址和储单元中的数据&lt;/strong&gt;。于是就有了二异性。为了消除这种二义性，C 语言规定 a 表示存储单元中的数据，&amp;amp;a 表示存储单元的地址。&lt;br /&gt;
a 存储单元中的数据可以是一个普通数值，也可以是另一个存储单元的地址，比如：a = &amp;amp;b; 语句就是将 b 的存储单元的地址存入 a 存储单元中。C 语言规定&lt;em&gt; a 代表 a 中存储的地址对应的存储单元中的数据，也就是访问&lt;/em&gt; a 就等于访问 b，于是 * a 提供了通过 a 访问 b 中的数据的手段。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a 表示 a 对应的存储单元中的数据。&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&amp;amp;a 表示 a 对应的存储单元的地址。&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;&lt;em&gt;“&lt;/em&gt;a” 表示：首先，要求 a 对应的存储单元中的数据一定是另一个存储单元的地址。&lt;/em&gt;*&lt;br /&gt;
&lt;em&gt;&lt;em&gt; 于是，“&lt;/em&gt;a” 表示另一个存储单元中的数据。&lt;/em&gt;*&lt;br /&gt;
&lt;strong&gt; 当 a 声明的类型是 int 时&lt;/strong&gt;，a 中存储的是一个整数数值，通过 a 可以访问（读取或修改）这个数值。&lt;br /&gt;
&lt;strong&gt;当 a 声明的类型是 int * 时&lt;/strong&gt;，a 中存储的是一个存储单元的地址，而该存储单元中存储的数据是一个整数数值；通过 * a 可以访问（读取或修改）这个数值。a == &amp;amp;*a 都是该存储单元的地址。&lt;br /&gt;
&lt;strong&gt;当 a 声明的类型是 int * * 时&lt;/strong&gt;，a 中存储的是一个存储单元的地址，而该存储单元中存储的数据是另外一个存储单元的地址，另外这个存储单元中存储的是一个整数数值；通过 * * a 可以访问（读取或修改）这个数值。&lt;br /&gt;
…&lt;/p&gt;
&lt;p&gt;最后，在 C 语言里地址叫指针。还有，在 C 语言中的数组本质上其实也是指针，即：* a 等同于 a []。&lt;/p&gt;
&lt;p&gt;转载于：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIxNTgzNjgxL2FydGljbGUvZGV0YWlscy83ODU3MjAwOQ==&#34;&gt;C 语言中的 * 和 &amp;amp; 符号&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="编程基础" scheme="https://zengshengli775.gitee.io/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/" />
        <category term="C" scheme="https://zengshengli775.gitee.io/tags/C/" />
        <updated>2021-08-18T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/18/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
        <title>C语言基础知识</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/18/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
        <content type="html">&lt;h2 id=&#34;注释&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注释&#34;&gt;#&lt;/a&gt; 注释&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 单行注释&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* 单行注释 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 多行注释&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 多行注释&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 多行注释&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;数据类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据类型&#34;&gt;#&lt;/a&gt; 数据类型&lt;/h2&gt;
&lt;h4 id=&#34;基本类型它们是算术类型包括两种类型整数类型和浮点类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本类型它们是算术类型包括两种类型整数类型和浮点类型&#34;&gt;#&lt;/a&gt; 基本类型：它们是算术类型，包括两种类型：整数类型和浮点类型。&lt;/h4&gt;
&lt;h5 id=&#34;整数类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#整数类型&#34;&gt;#&lt;/a&gt; 整数类型&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;存储大小&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;值范围&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;char&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1 字节&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-128 到 127 或 0 到 255&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;unsigned char&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1 字节&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;0 到 255&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;signed char&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1 字节&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-128 到 127&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;int&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2 或 4 字节&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-32,768 到 32,767 或 -2,147,483,648 到 2,147,483,647&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;unsigned int&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2 或 4 字节&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;0 到 65,535 或 0 到 4,294,967,295&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;short&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2 字节&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-32,768 到 32,767&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;unsigned short&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2 字节&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;0 到 65,535&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;long&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;4 字节&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-2,147,483,648 到 2,147,483,647&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;unsigned long&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;4 字节&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;0 到 4,294,967,295&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;浮点类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#浮点类型&#34;&gt;#&lt;/a&gt; 浮点类型&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;存储大小&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;值范围&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;精度&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;float&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;4 字节&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1.2E-38 到 3.4E+38&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;6 位有效位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;double&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;8 字节&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2.3E-308 到 1.7E+308&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;15 位有效位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;long double&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;16 字节&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;3.4E-4932 到 1.1E+4932&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;19 位有效位&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;枚举类型它们也是算术类型被用来定义在程序中只能赋予其一定的离散整数值的变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#枚举类型它们也是算术类型被用来定义在程序中只能赋予其一定的离散整数值的变量&#34;&gt;#&lt;/a&gt; 枚举类型：它们也是算术类型，被用来定义在程序中只能赋予其一定的离散整数值的变量。&lt;/h4&gt;
&lt;h4 id=&#34;void-类型类型说明符-void-表明没有可用的值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#void-类型类型说明符-void-表明没有可用的值&#34;&gt;#&lt;/a&gt; void 类型：类型说明符 &lt;em&gt;void&lt;/em&gt; 表明没有可用的值。&lt;/h4&gt;
&lt;h5 id=&#34;void-类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#void-类型&#34;&gt;#&lt;/a&gt; void 类型&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;序号&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型与描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;函数返回为空&lt;/strong&gt; C 中有各种函数都不返回值，或者您可以说它们返回空。不返回值的函数的返回类型为空。例如 &lt;strong&gt;void exit (int status);&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;函数参数为空&lt;/strong&gt; C 中有各种函数不接受任何参数。不带参数的函数可以接受一个 void。例如 &lt;strong&gt;int rand(void);&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;指针指向 void&lt;/strong&gt; 类型为 void * 的指针代表对象的地址，而不是类型。例如，内存分配函数 &lt;strong&gt;void *malloc( size_t size );&lt;/strong&gt; 返回指向 void 的指针，可以转换为任何数据类型。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;派生类型它们包括指针类型-数组类型-结构类型-共用体类型和函数类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#派生类型它们包括指针类型-数组类型-结构类型-共用体类型和函数类型&#34;&gt;#&lt;/a&gt; 派生类型：它们包括：指针类型、数组类型、结构类型、共用体类型和函数类型。&lt;/h4&gt;
&lt;h4 id=&#34;强制类型转换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#强制类型转换&#34;&gt;#&lt;/a&gt; 强制类型转换&lt;/h4&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; sum &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt; mean&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   mean &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; sum &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 使用强制类型转换运算符把一个整数变量除以另一个整数变量，得到一个浮点数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Value of mean : %f\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mean &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Value of mean &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3.400000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 强制类型转换运算符的优先级大于除法，因此 sum 的值首先被转换为 double 型，然后除以 count，得到一个类型为 double 的值。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#变量&#34;&gt;#&lt;/a&gt; 变量&lt;/h2&gt;
&lt;p&gt;变量定义：&amp;lt;类型名称&amp;gt; &amp;lt; 变量名称 &amp;gt;&lt;/p&gt;
&lt;p&gt;变量类型：&lt;strong&gt;char&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​					&lt;strong&gt;int&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​					&lt;strong&gt;float&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​					&lt;strong&gt;double&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​					 &lt;strong&gt;void&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;常量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常量&#34;&gt;#&lt;/a&gt; 常量&lt;/h2&gt;
&lt;p&gt;在 C 中，有两种简单的定义常量的方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 &lt;strong&gt;#define&lt;/strong&gt; 预处理器。&lt;/li&gt;
&lt;li&gt;使用 &lt;strong&gt;const&lt;/strong&gt; 关键字。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// #define 预处理器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// #define identifier value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;LENGTH&lt;/span&gt; &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;   &lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;WIDTH&lt;/span&gt;  &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;NEWLINE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;\n&#39;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; area&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   area &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; LENGTH &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; WIDTH&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;value of area : %d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; area&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%c&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; NEWLINE&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//const 关键字&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// const type variable = value;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;  LENGTH &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;  WIDTH  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; NEWLINE &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; area&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   area &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; LENGTH &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; WIDTH&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;value of area : %d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; area&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%c&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; NEWLINE&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;存储类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#存储类&#34;&gt;#&lt;/a&gt; 存储类&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;auto 是所有局部变量默认的存储类&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; mount&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; month&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;auto&lt;/span&gt; 只能用在函数内，即 &lt;span class=&#34;token keyword&#34;&gt;auto&lt;/span&gt; 只能修饰局部变量&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;register 用于定义存储在寄存器中而不是 RAM 中的局部变量&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;  miles&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;不能对它应用一元的 &lt;span class=&#34;token string&#34;&gt;&#39;&amp;amp;&#39;&lt;/span&gt; 运算符（因为它没有内存位置）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;static 当使用 static 修饰局部变量可以在函数调用之间保持局部变量的值；当修饰全局变量时，会使变量的作用域限制在声明它的文件内&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* 函数声明 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;/* 全局变量 - static 是默认的 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* &#39;thingy&#39; 是 &#39;func1&#39; 的局部变量 - 只初始化一次&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * 每次调用函数 &#39;func1&#39; &#39;thingy&#39; 值不会被重置。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; */&lt;/span&gt;                &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; thingy&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  thingy&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; thingy 为 %d ， count 为 %d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; thingy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;count 作为全局变量可以在函数内使用，thingy 使用 &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; 修饰后，不会在每次调用时重置。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;extern 用于提供一个全局变量的引用，全局变量对所有的程序文件都是可见的；是用来在另一个文件中声明一个全局变量或函数&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 第一个文件：main.c&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;extern&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;write_extern&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   count &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;write_extern&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 第二个文件：support.c&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;extern&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;write_extern&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;count is %d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;第二个文件中的 &lt;span class=&#34;token keyword&#34;&gt;extern&lt;/span&gt; 关键字用于声明已经在第一个文件 main&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c 中定义的 count。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ gcc main&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c support&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;count is &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#运算符&#34;&gt;#&lt;/a&gt; 运算符&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;算术运算符&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// ++a 和 a++ 结果的不同：a++ 返回 a 加 1 以前的值，++a 返回 a 加 1 以后的值。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a++=%d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a=%d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;++a=%d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a=%d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;a&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;关系运算符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;逻辑运算符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;位运算符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;赋值运算符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;运算符&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;描述&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;实例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;=&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;简单的赋值运算符，把右边操作数的值赋给左边操作数&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;C = A + B 将把 A + B 的值赋给 C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;+=&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;加且赋值运算符，把右边操作数加上左边操作数的结果赋值给左边操作数&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;C += A 相当于 C = C + A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;-=&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;减且赋值运算符，把左边操作数减去右边操作数的结果赋值给左边操作数&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;C -= A 相当于 C = C - A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;*=&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;乘且赋值运算符，把右边操作数乘以左边操作数的结果赋值给左边操作数&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;C *= A 相当于 C = C * A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;/=&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;除且赋值运算符，把左边操作数除以右边操作数的结果赋值给左边操作数&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;C /= A 相当于 C = C / A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;%=&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;求模且赋值运算符，求两个操作数的模赋值给左边操作数&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;C %= A 相当于 C = C % A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;lt;&amp;lt;=&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;左移且赋值运算符&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;C &amp;lt;&amp;lt;= 2 等同于 C = C &amp;lt;&amp;lt; 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;gt;&amp;gt;=&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;右移且赋值运算符&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;C &amp;gt;&amp;gt;= 2 等同于 C = C &amp;gt;&amp;gt; 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;amp;=&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;按位与且赋值运算符&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;C &amp;amp;= 2 等同于 C = C &amp;amp; 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;^=&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;按位异或且赋值运算符&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;C ^= 2 等同于 C = C ^ 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;|=&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;按位或且赋值运算符&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;C |= 2 等同于 C = C | 2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;杂项运算符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;运算符&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;描述&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;实例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;sizeof()&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;给出某个类型或变量在内存中所占据的字节数。&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;sizeof (a) 将返回 4，其中 a 是整数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;amp;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;返回变量的地址。&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;amp;a; 将给出变量的实际地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;*&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;指向一个变量。&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;*a; 将指向一个变量。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;? :&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;条件表达式&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;如果条件为真？则值为 X : 否则值为 Y&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;详情可见：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9jcHJvZ3JhbW1pbmcvYy1vcGVyYXRvcnMuaHRtbA==&#34;&gt;运算符&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;判断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#判断&#34;&gt;#&lt;/a&gt; 判断&lt;/h2&gt;
&lt;h3 id=&#34;if-语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#if-语句&#34;&gt;#&lt;/a&gt; if 语句&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//if 语句的语法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;boolean_expression&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token comment&#34;&gt;/* 如果布尔表达式为真将执行的语句 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;ifelse-语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ifelse-语句&#34;&gt;#&lt;/a&gt; if...else 语句&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//if...else 语句的语法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;boolean_expression&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token comment&#34;&gt;/* 如果布尔表达式为真将执行的语句 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token comment&#34;&gt;/* 如果布尔表达式为假将执行的语句 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 级联的 if-else if&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;boolean_expression&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  st1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;boolean_expression&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  st2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;boolean_expression&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  st3&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  st4&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token comment&#34;&gt;/* 局部变量定义 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token comment&#34;&gt;/* 检查布尔条件 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token comment&#34;&gt;/* 如果条件为真，则输出下面的语句 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 小于 20\n&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token comment&#34;&gt;/* 如果条件为假，则输出下面的语句 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 大于 20\n&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 的值是 %d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;switch-语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#switch-语句&#34;&gt;#&lt;/a&gt; switch 语句&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//switch 语句的语法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;expression&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; constant&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;expression  &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token function&#34;&gt;statement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/* 可选的 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; constant&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;expression  &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token function&#34;&gt;statement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/* 可选的 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/* 您可以有任意数量的 case 语句 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/* 可选的 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token function&#34;&gt;statement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	&lt;strong&gt;流程图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://ww1.sinaimg.cn/large/007QGucbly1gtnigzt8mpj608e0b9dfv02.jpg&#34; alt=&#34;流程图.jpg&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;循环&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#循环&#34;&gt;#&lt;/a&gt; 循环&lt;/h2&gt;
&lt;h3 id=&#34;循环类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#循环类型&#34;&gt;#&lt;/a&gt; 循环类型&lt;/h3&gt;
&lt;p&gt;​	&lt;strong&gt;while 循环&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//while 循环的语法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;condition&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;statement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//statement (s) 可以是一个单独的语句，也可以是几个语句组成的代码块。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//condition 可以是任意的表达式，当为任意非零值时都为 true。当条件为 true 时执行循环。 当条件为 false 时，退出循环，程序流将继续执行紧接着循环的下一条语句。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	&lt;strong&gt;for 循环&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//for 循环的语法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; init&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; condition&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; increment &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;statement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//increment 语句允许您更新循环控制变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; fact &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		fact &lt;span class=&#34;token operator&#34;&gt;*=&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%d! = %d \n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fact&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;http://ww1.sinaimg.cn/large/007QGucbly1gtniqa5fukj30e80f30t6.jpg&#34; alt=&#34;流程图.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;do...while 循环&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//do...while 循环的语法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;statement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; condition &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 条件表达式出现在循环的尾部，所以循环中的 statement (s) 会在条件被测试之前至少执行一次。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果条件为真，控制流会跳转回上面的 do，然后重新执行循环中的 statement (s)。这个过程会不断重复，直到给定条件变为假为止。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;循环控制语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#循环控制语句&#34;&gt;#&lt;/a&gt; 循环控制语句&lt;/h3&gt;
&lt;p&gt;​	&lt;strong&gt;break&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;1. 当 break 语句出现在一个循环内时，会跳出循环。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;2. 它可用于终止 switch 语句中的一个 case。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;http://ww1.sinaimg.cn/large/007QGucbly1gtnix22m2ij30fk09uq3l.jpg&#34; alt=&#34;c-break-statement-works.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;continue&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;continue 跳过循环的这一轮剩下的语句，进入下一轮。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;对于 for 循环，continue 语句执行后自增语句仍然会执行。对于 while 和 do...while 循环，continue 语句重新执行条件判断语句。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;http://ww1.sinaimg.cn/large/007QGucbly1gtnizqdn60j30dw09fjrz.jpg&#34; alt=&#34;c-continue-statement-works.jpg&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#函数&#34;&gt;#&lt;/a&gt; 函数&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;返回类型 函数名&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;参数表&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 函数头&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   函数体&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* 函数返回两个数中较大的那个数 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; num1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; num2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token comment&#34;&gt;/* 局部变量声明 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;num1 &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; num2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; num1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; num2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; 函数名&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;参数表&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// 不能使用带值的 return&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 可以没有 return&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 调用的时候不能做返回值的赋值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;声明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#声明&#34;&gt;#&lt;/a&gt; 声明&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;原型声明&lt;/strong&gt;：将函数头放在调用前。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;函数原型&lt;/strong&gt;：函数头，以分号 &amp;quot;;&amp;quot; 结尾，构成函数原型。&lt;/p&gt;
&lt;p&gt;函数头参数可以不写名字。如果确定没有参数，把 void 写进去： &lt;code&gt;void swap(void);&lt;/code&gt;  对于不返回值而且只有一个 int 类型的参数的函数，以下函数原型是正确的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;void f(int x);&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;void f();&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;void f(int);&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;变量-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#变量-2&#34;&gt;#&lt;/a&gt; 变量&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C 语言中有三个地方可以声明变量：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在函数或块内部的&lt;strong&gt;局部&lt;/strong&gt;变量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在所有函数外部的&lt;strong&gt;全局&lt;/strong&gt;变量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;strong&gt;形式&lt;/strong&gt;参数的函数参数定义中&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;本地变量（局部变量）&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;本地变量的生存期、作用域：大括号内。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;块外定义的变量，块内仍然有效。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;内部外部同名，内部会覆盖掉外部。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本地变量不会被默认初始化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数在进入函数的时候就初始化了。&lt;/p&gt;
&lt;h3 id=&#34;参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参数&#34;&gt;#&lt;/a&gt; 参数&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;传值调用&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 该方法把参数的实际值复制给函数的形式参数。在这种情况下，修改函数内的形式参数不会影响实际参数。//&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* 函数声明 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;swap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token comment&#34;&gt;/* 局部变量定义 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;交换前，a 的值： %d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;交换前，b 的值： %d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token comment&#34;&gt;/* 调用函数来交换值 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;swap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;交换后，a 的值： %d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;交换后，b 的值： %d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;交换前，a 的值： &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;交换前，b 的值： &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;交换后，a 的值： &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;交换后，b 的值： &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 虽然在函数内改变了 a 和 b 的值，但是实际上 a 和 b 的值没有发生变化。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	&lt;strong&gt;引用调用&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 通过指针传递方式，形参为指向实参地址的指针，当对形参的指向操作时，就相当于对实参本身进行的操作。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* 函数声明 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;swap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token comment&#34;&gt;/* 局部变量定义 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;交换前，a 的值： %d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;交换前，b 的值： %d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token comment&#34;&gt;/* 调用函数来交换值&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    * &amp;amp;a 表示指向 a 的指针，即变量 a 的地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    * &amp;amp;b 表示指向 b 的指针，即变量 b 的地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;swap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;交换后，a 的值： %d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;交换后，b 的值： %d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;交换前，a 的值： &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;交换前，b 的值： &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;交换后，a 的值： &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;交换后，b 的值： &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引用调用在函数内改变了 a 和 b 的值，实际上也改变了函数外 a 和 b 的值。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;void f(void)&lt;/code&gt;  表示 f 函数没有参数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;void f()&lt;/code&gt;  表示 f 函数参数未知，不建议这样写原型，原型里一定要写全参数；&lt;/p&gt;
&lt;h2 id=&#34;数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数组&#34;&gt;#&lt;/a&gt; 数组&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;数组定义&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;类型&amp;gt; 变量名称 [元素数量];&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数组集成初始化&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;int a[] = &amp;#123;2, 4, 6, ...&amp;#125;;&lt;/code&gt; ，大小由元素数量确定。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int a[13] = &amp;#123;2&amp;#125;;&lt;/code&gt; ，除了第一个元素为 2，其他元素均为 0&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int a[10] = &amp;#123; [0] = 2, [2] = 3, 6, &amp;#125;;&lt;/code&gt;  6 是  &lt;code&gt;a[3]&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;用  &lt;code&gt;[n]&lt;/code&gt;  在初始化数据中给出定位&lt;/li&gt;
&lt;li&gt;没有定位的数据接在前面的位置后面&lt;/li&gt;
&lt;li&gt;其他位置的值补零&lt;/li&gt;
&lt;li&gt;也可以不给出数组大小，让编译器算&lt;/li&gt;
&lt;li&gt;特别适合初始数据稀疏的数组&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数组大小&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sizeof(a)/sizeof(a[0])&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数组赋值&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;int a[] = &amp;#123;2,3,4&amp;#125;; int b[] = a;&lt;/code&gt;  是不能赋值的&lt;/li&gt;
&lt;li&gt;必须遍历： &lt;code&gt;for (i=0; i&amp;lt;length; i++) &amp;#123;b[i] = a[i];&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int a[][3] = &amp;#123; &amp;#123;0&amp;#125;,&amp;#123;1&amp;#125;,&amp;#123;2&amp;#125; &amp;#125;;&lt;/code&gt; ， &lt;code&gt;a = [[0,0,0],[1,0,0],[2,0,0]]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;遍历数组&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通常使用 for，i 从 0 到 &amp;lt; 数组的长度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数组作为函数参数时，往往&lt;strong&gt;必须再用另一个参数来传入数组大小&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不能在  &lt;code&gt;[]&lt;/code&gt;  中给出数组大小&lt;/li&gt;
&lt;li&gt;不能再利用 sizeof 来计算数组的元素个数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;输入输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入输出&#34;&gt;#&lt;/a&gt; 输入输出&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;printf(&amp;quot;%03d&amp;quot;,out_time)&lt;/strong&gt;;&lt;/p&gt;
&lt;p&gt;%03d 是用在 printf 或 scanf 函数中的格式符，用来以特定的格式输入和输出字符。&lt;/p&gt;
&lt;p&gt;% 是格式符的开始。&lt;/p&gt;
&lt;p&gt;d 表示有符号整数。&lt;/p&gt;
&lt;p&gt;3 表示最小输出 3 位数字。&lt;/p&gt;
&lt;p&gt;0 表示如果数字不足 3 位，在左边用 0 补成 3 位。&lt;/p&gt;
&lt;p&gt;如 printf (&amp;quot;%03d&amp;quot;, 1); 会打印出 001&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;printf(&amp;quot;%.10f&amp;quot;,out)&lt;/strong&gt;;&lt;/p&gt;
&lt;p&gt;f 表示浮点数&lt;/p&gt;
&lt;p&gt;.10 表示输出 10 位&lt;/p&gt;
</content>
        <category term="编程基础" scheme="https://zengshengli775.gitee.io/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/" />
        <category term="C" scheme="https://zengshengli775.gitee.io/tags/C/" />
        <updated>2021-08-17T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/14/%E8%80%83%E7%A0%94/%E8%80%83%E7%A0%94%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/</id>
        <title>考研流程记录</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/14/%E8%80%83%E7%A0%94/%E8%80%83%E7%A0%94%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
        <content type="html">&lt;h2 id=&#34;考研资料&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#考研资料&#34;&gt;#&lt;/a&gt; 考研资料&lt;/h2&gt;
&lt;h3 id=&#34;数学&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数学&#34;&gt;#&lt;/a&gt; 数学&lt;/h3&gt;
&lt;h4 id=&#34;高数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#高数&#34;&gt;#&lt;/a&gt; 高数&lt;/h4&gt;
&lt;h5 id=&#34;a高数基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#a高数基础&#34;&gt;#&lt;/a&gt; A. 高数基础&lt;/h5&gt;
&lt;h6 id=&#34;1教材辅导&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1教材辅导&#34;&gt;#&lt;/a&gt; 1. 教材辅导&lt;/h6&gt;
&lt;p&gt;《李永乐王式安复习全书》高数部分&lt;/p&gt;
&lt;p&gt;《汤家凤高等数学辅导讲义》+ 汤家凤基础班视频&lt;/p&gt;
&lt;h6 id=&#34;2习题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2习题&#34;&gt;#&lt;/a&gt; 2. 习题&lt;/h6&gt;
&lt;p&gt;《张宇 1000 题》高数部分 + 刷题实战演练视频&lt;/p&gt;
&lt;h5 id=&#34;b高数强化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#b高数强化&#34;&gt;#&lt;/a&gt; B. 高数强化&lt;/h5&gt;
&lt;h6 id=&#34;1教材辅导-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1教材辅导-2&#34;&gt;#&lt;/a&gt; 1. 教材辅导&lt;/h6&gt;
&lt;p&gt;《张宇高数 18 讲》+ 张宇强化班视频&lt;/p&gt;
&lt;h6 id=&#34;2习题-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2习题-2&#34;&gt;#&lt;/a&gt; 2. 习题&lt;/h6&gt;
&lt;p&gt;二刷《张宇 1000 题》高数部分&lt;/p&gt;
&lt;h4 id=&#34;线代&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线代&#34;&gt;#&lt;/a&gt; 线代&lt;/h4&gt;
&lt;h5 id=&#34;a线代基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#a线代基础&#34;&gt;#&lt;/a&gt; A. 线代基础&lt;/h5&gt;
&lt;h6 id=&#34;1教材辅导-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1教材辅导-3&#34;&gt;#&lt;/a&gt; 1. 教材辅导&lt;/h6&gt;
&lt;p&gt;《李永乐王式安复习全书》线代部分 + 李永乐基础班视频&lt;/p&gt;
&lt;h6 id=&#34;2习题-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2习题-3&#34;&gt;#&lt;/a&gt; 2. 习题&lt;/h6&gt;
&lt;p&gt;《张宇 1000 题》线代部分 + 刷题实战演练视频&lt;/p&gt;
&lt;h5 id=&#34;b线代强化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#b线代强化&#34;&gt;#&lt;/a&gt; B. 线代强化&lt;/h5&gt;
&lt;h6 id=&#34;1教材辅导-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1教材辅导-4&#34;&gt;#&lt;/a&gt; 1. 教材辅导&lt;/h6&gt;
&lt;p&gt;《张宇线代 9 讲》&lt;/p&gt;
&lt;p&gt;《李永乐线代辅导讲义》+ 李永乐强化班视频&lt;/p&gt;
&lt;h6 id=&#34;2习题-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2习题-4&#34;&gt;#&lt;/a&gt; 2. 习题&lt;/h6&gt;
&lt;p&gt;二刷《张宇 1000 题》线代部分&lt;/p&gt;
&lt;h4 id=&#34;概率&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概率&#34;&gt;#&lt;/a&gt; 概率&lt;/h4&gt;
&lt;h5 id=&#34;a概率基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#a概率基础&#34;&gt;#&lt;/a&gt; A. 概率基础&lt;/h5&gt;
&lt;h6 id=&#34;1教材辅导-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1教材辅导-5&#34;&gt;#&lt;/a&gt; 1. 教材辅导&lt;/h6&gt;
&lt;p&gt;《李永乐王式安复习全书》概率部分 + 王式安基础班视频&lt;/p&gt;
&lt;h6 id=&#34;2习题-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2习题-5&#34;&gt;#&lt;/a&gt; 2. 习题&lt;/h6&gt;
&lt;p&gt;《张宇 1000 题》概率部分 + 刷题实战演练视频&lt;/p&gt;
&lt;h5 id=&#34;b概率强化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#b概率强化&#34;&gt;#&lt;/a&gt; B. 概率强化&lt;/h5&gt;
&lt;h6 id=&#34;1教材辅导-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1教材辅导-6&#34;&gt;#&lt;/a&gt; 1. 教材辅导&lt;/h6&gt;
&lt;p&gt;《张宇概率 9 讲》&lt;/p&gt;
&lt;p&gt;《王式安概率辅导讲义》+ 王式安强化班视频&lt;/p&gt;
&lt;h6 id=&#34;2习题-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2习题-6&#34;&gt;#&lt;/a&gt; 2. 习题&lt;/h6&gt;
&lt;p&gt;二刷《张宇 1000 题》概率部分&lt;/p&gt;
&lt;h4 id=&#34;真题模拟题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#真题模拟题&#34;&gt;#&lt;/a&gt; 真题模拟题&lt;/h4&gt;
&lt;p&gt;《张宇考研数学真题大全解》+ 真题精讲视频&lt;/p&gt;
&lt;p&gt;《张宇八套卷》+ 重要题目讲解视频&lt;/p&gt;
&lt;h3 id=&#34;英语&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#英语&#34;&gt;#&lt;/a&gt; 英语&lt;/h3&gt;
&lt;h4 id=&#34;1单词&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1单词&#34;&gt;#&lt;/a&gt; 1. 单词&lt;/h4&gt;
&lt;p&gt;《恋练有词》&lt;/p&gt;
&lt;h4 id=&#34;2长难句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2长难句&#34;&gt;#&lt;/a&gt; 2. 长难句&lt;/h4&gt;
&lt;p&gt;考研核心语法视频&lt;/p&gt;
&lt;h4 id=&#34;3阅读&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3阅读&#34;&gt;#&lt;/a&gt; 3. 阅读&lt;/h4&gt;
&lt;p&gt;唐迟《考研英语阅读的逻辑》+ 阅读逻辑视频&lt;/p&gt;
&lt;h4 id=&#34;4写作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4写作&#34;&gt;#&lt;/a&gt; 4. 写作&lt;/h4&gt;
&lt;p&gt;王江涛《考研英语高分写作》+ 写作带背营视频 + 写作基础视频&lt;/p&gt;
&lt;h4 id=&#34;5真题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5真题&#34;&gt;#&lt;/a&gt; 5. 真题&lt;/h4&gt;
&lt;p&gt;《张剑黄皮书历年考研》+ 阅读强化提升班视频&lt;/p&gt;
&lt;h3 id=&#34;政治&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#政治&#34;&gt;#&lt;/a&gt; 政治&lt;/h3&gt;
&lt;h4 id=&#34;1视频&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1视频&#34;&gt;#&lt;/a&gt; 1. 视频&lt;/h4&gt;
&lt;p&gt;徐涛《核心考案》+ 强化班视频&lt;/p&gt;
&lt;h4 id=&#34;2辅导书习题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2辅导书习题&#34;&gt;#&lt;/a&gt; 2. 辅导书 + 习题&lt;/h4&gt;
&lt;p&gt;肖秀荣《1000 题》&lt;/p&gt;
&lt;p&gt;肖秀荣《知识点精讲精练》&lt;/p&gt;
&lt;p&gt;肖秀荣《命题冲刺 8 套卷》必背大题&lt;/p&gt;
&lt;p&gt;肖秀荣《命题终极预测 4 套卷》必背大题&lt;/p&gt;
&lt;h3 id=&#34;专业课408&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#专业课408&#34;&gt;#&lt;/a&gt; 专业课 408&lt;/h3&gt;
&lt;h4 id=&#34;1教材辅导-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1教材辅导-7&#34;&gt;#&lt;/a&gt; 1. 教材辅导&lt;/h4&gt;
&lt;p&gt;” 四本课本 “&lt;/p&gt;
&lt;p&gt;天勤《数据结构》+ 强化视频&lt;/p&gt;
&lt;p&gt;《王道数据结构》习题&lt;/p&gt;
&lt;p&gt;《王道计组》+ 强化视频&lt;/p&gt;
&lt;p&gt;《王道计网》+ 强化视频&lt;/p&gt;
&lt;p&gt;《王道操作系统》+ 强化视频&lt;/p&gt;
&lt;h4 id=&#34;2真题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2真题&#34;&gt;#&lt;/a&gt; 2. 真题&lt;/h4&gt;
&lt;p&gt;王道《历年真题解析》+ 历年真题视频&lt;/p&gt;
&lt;h4 id=&#34;3模拟题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3模拟题&#34;&gt;#&lt;/a&gt; 3. 模拟题&lt;/h4&gt;
&lt;p&gt;王道《模拟题》+ 模拟题视频&lt;/p&gt;
&lt;h4 id=&#34;4机试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4机试&#34;&gt;#&lt;/a&gt; 4. 机试&lt;/h4&gt;
&lt;p&gt;《算法笔记》+PAT 甲级考试&lt;/p&gt;
&lt;p&gt;王道《机试指南》+ 复试机试视频&lt;/p&gt;
&lt;h2 id=&#34;考研规划&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#考研规划&#34;&gt;#&lt;/a&gt; 考研规划&lt;/h2&gt;
&lt;h3 id=&#34;数学-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数学-2&#34;&gt;#&lt;/a&gt; 数学&lt;/h3&gt;
&lt;h4 id=&#34;1基础阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1基础阶段&#34;&gt;#&lt;/a&gt; 1. 基础阶段&lt;/h4&gt;
&lt;h5 id=&#34;1月-3月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1月-3月&#34;&gt;#&lt;/a&gt; 1 月 - 3 月&lt;/h5&gt;
&lt;p&gt;高数：《李永乐王式安复习全书》高数部分、《汤家凤高等数学辅导讲义》+ 汤家凤基础班视频、《张宇 1000 题》高数部分 + 刷题实战演练视频&lt;/p&gt;
&lt;h5 id=&#34;4月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4月&#34;&gt;#&lt;/a&gt; 4 月&lt;/h5&gt;
&lt;p&gt;线代：《李永乐王式安复习全书》线代部分 + 李永乐基础班视频、《张宇 1000 题》线代部分 + 刷题实战演练视频&lt;/p&gt;
&lt;h5 id=&#34;5月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5月&#34;&gt;#&lt;/a&gt; 5 月&lt;/h5&gt;
&lt;p&gt;概率论：《李永乐王式安复习全书》概率部分 + 王式安基础班视频、《张宇 1000 题》概率部分 + 刷题实战演练视频&lt;/p&gt;
&lt;h4 id=&#34;2强化阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2强化阶段&#34;&gt;#&lt;/a&gt; 2. 强化阶段&lt;/h4&gt;
&lt;h5 id=&#34;7月-8月15日&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7月-8月15日&#34;&gt;#&lt;/a&gt; 7 月 - 8 月 15 日&lt;/h5&gt;
&lt;p&gt;高数：《张宇高数 18 讲》+ 张宇强化班视频、二刷《张宇 1000 题》高数部分&lt;/p&gt;
&lt;h5 id=&#34;8月15日-9月10日&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8月15日-9月10日&#34;&gt;#&lt;/a&gt; 8 月 15 日 - 9 月 10 日&lt;/h5&gt;
&lt;p&gt;线代：《张宇线代 9 讲》、《李永乐线代辅导讲义》+ 李永乐强化班视频、二刷《张宇 1000 题》线代部分&lt;/p&gt;
&lt;h5 id=&#34;9月10日-9月31日&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9月10日-9月31日&#34;&gt;#&lt;/a&gt; 9 月 10 日 - 9 月 31 日&lt;/h5&gt;
&lt;p&gt;概率：《张宇概率 9 讲》、《王式安概率辅导讲义》+ 王式安强化班视频、二刷《张宇 1000 题》概率部分&lt;/p&gt;
&lt;h4 id=&#34;3冲刺阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3冲刺阶段&#34;&gt;#&lt;/a&gt; 3. 冲刺阶段&lt;/h4&gt;
&lt;h5 id=&#34;10月-12月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10月-12月&#34;&gt;#&lt;/a&gt; 10 月 - 12 月&lt;/h5&gt;
&lt;p&gt;《张宇考研数学真题大全解》+ 真题精讲视频&lt;/p&gt;
&lt;p&gt;《张宇八套卷》+ 重要题目讲解视频&lt;/p&gt;
&lt;h3 id=&#34;英语-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#英语-2&#34;&gt;#&lt;/a&gt; 英语&lt;/h3&gt;
&lt;h4 id=&#34;1基础阶段-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1基础阶段-2&#34;&gt;#&lt;/a&gt; 1. 基础阶段&lt;/h4&gt;
&lt;h5 id=&#34;1月-2月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1月-2月&#34;&gt;#&lt;/a&gt; 1 月 - 2 月&lt;/h5&gt;
&lt;p&gt;单词：集中背单词，以后每天循环背&lt;/p&gt;
&lt;h5 id=&#34;3月-5月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3月-5月&#34;&gt;#&lt;/a&gt; 3 月 - 5 月&lt;/h5&gt;
&lt;p&gt;单词：每天循环背&lt;/p&gt;
&lt;p&gt;长难句：考研核心语法视频&lt;/p&gt;
&lt;p&gt;阅读：唐迟《考研英语阅读的逻辑》+ 阅读逻辑视频&lt;/p&gt;
&lt;p&gt;写作：王江涛《考研英语高分写作》+ 写作带背营视频 + 写作基础视频&lt;/p&gt;
&lt;h4 id=&#34;2强化阶段-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2强化阶段-2&#34;&gt;#&lt;/a&gt; 2. 强化阶段&lt;/h4&gt;
&lt;h5 id=&#34;7月-10月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7月-10月&#34;&gt;#&lt;/a&gt; 7 月 - 10 月&lt;/h5&gt;
&lt;p&gt;单词：每天循环背&lt;/p&gt;
&lt;p&gt;真题：《张剑黄皮书历年考研》+ 阅读强化提升班视频&lt;/p&gt;
&lt;h4 id=&#34;3冲刺阶段-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3冲刺阶段-2&#34;&gt;#&lt;/a&gt; 3. 冲刺阶段&lt;/h4&gt;
&lt;h5 id=&#34;11月-12月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11月-12月&#34;&gt;#&lt;/a&gt; 11 月 - 12 月&lt;/h5&gt;
&lt;p&gt;单词：每天循环背&lt;/p&gt;
&lt;p&gt;真题：隔一天做一次模拟考&lt;/p&gt;
&lt;p&gt;作文：背作文&lt;/p&gt;
&lt;p&gt;准备新题型、翻译、完型填空。&lt;/p&gt;
&lt;h3 id=&#34;政治-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#政治-2&#34;&gt;#&lt;/a&gt; 政治&lt;/h3&gt;
&lt;h4 id=&#34;1基础阶段-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1基础阶段-3&#34;&gt;#&lt;/a&gt; 1. 基础阶段&lt;/h4&gt;
&lt;h5 id=&#34;8月-9月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8月-9月&#34;&gt;#&lt;/a&gt; 8 月 - 9 月&lt;/h5&gt;
&lt;p&gt;视频：徐涛《核心考案》+ 强化班视频&lt;/p&gt;
&lt;p&gt;选择题：肖秀荣《1000 题》、肖秀荣《知识点精讲精练》&lt;/p&gt;
&lt;h4 id=&#34;2强化阶段-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2强化阶段-3&#34;&gt;#&lt;/a&gt; 2. 强化阶段&lt;/h4&gt;
&lt;h5 id=&#34;10月-11月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10月-11月&#34;&gt;#&lt;/a&gt; 10 月 - 11 月&lt;/h5&gt;
&lt;p&gt;选择题：二刷肖秀荣《1000 题》&lt;/p&gt;
&lt;p&gt;模拟题：肖秀荣《命题冲刺 8 套卷》，背大题&lt;/p&gt;
&lt;h4 id=&#34;3冲刺阶段-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3冲刺阶段-3&#34;&gt;#&lt;/a&gt; 3. 冲刺阶段&lt;/h4&gt;
&lt;h5 id=&#34;12月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12月&#34;&gt;#&lt;/a&gt; 12 月&lt;/h5&gt;
&lt;p&gt;模拟题：肖秀荣《命题终极预测 4 套卷》，&lt;strong&gt;肖 4 最重要，大题都要背&lt;/strong&gt;，每年肖四都能押中好几道简答题，非常良心，无数经验推荐，考前必背。&lt;/p&gt;
&lt;h3 id=&#34;专业课408-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#专业课408-2&#34;&gt;#&lt;/a&gt; 专业课 408&lt;/h3&gt;
&lt;h4 id=&#34;1基础阶段-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1基础阶段-4&#34;&gt;#&lt;/a&gt; 1. 基础阶段&lt;/h4&gt;
&lt;h5 id=&#34;1月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1月&#34;&gt;#&lt;/a&gt; 1 月&lt;/h5&gt;
&lt;p&gt;数据结构：天勤《数据结构》+ 强化视频、《王道数据结构》选择题&lt;/p&gt;
&lt;h5 id=&#34;2月-3月15&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2月-3月15&#34;&gt;#&lt;/a&gt; 2 月 - 3 月 15&lt;/h5&gt;
&lt;p&gt;《算法笔记》+PAT 甲级考试&lt;/p&gt;
&lt;h5 id=&#34;3月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3月&#34;&gt;#&lt;/a&gt; 3 月&lt;/h5&gt;
&lt;p&gt;《王道计组》选择题 + 强化视频&lt;/p&gt;
&lt;h5 id=&#34;4月-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4月-2&#34;&gt;#&lt;/a&gt; 4 月&lt;/h5&gt;
&lt;p&gt;《王道计网》选择题 + 强化视频&lt;/p&gt;
&lt;h5 id=&#34;5月-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5月-2&#34;&gt;#&lt;/a&gt; 5 月&lt;/h5&gt;
&lt;p&gt;《王道操作系统》选择题 + 强化视频&lt;/p&gt;
&lt;h4 id=&#34;2强化阶段-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2强化阶段-4&#34;&gt;#&lt;/a&gt; 2. 强化阶段&lt;/h4&gt;
&lt;h5 id=&#34;7月-8月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7月-8月&#34;&gt;#&lt;/a&gt; 7 月 - 8 月&lt;/h5&gt;
&lt;p&gt;二刷《王道数据结构》、《王道计组》、《王道计网》、《王道操作系统》选择题和大题&lt;/p&gt;
&lt;p&gt;全面复习知识点及第一轮复习遗留下来的难点&lt;/p&gt;
&lt;h5 id=&#34;9月&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9月&#34;&gt;#&lt;/a&gt; 9 月&lt;/h5&gt;
&lt;p&gt;参照天勤《数据结构》、《计组》、《计网》、《操作系统》整理出一份自己的重要知识点汇总及易混知识点对比，快速的把天勤复习全书上的题刷完。&lt;/p&gt;
&lt;h4 id=&#34;3冲刺阶段-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3冲刺阶段-4&#34;&gt;#&lt;/a&gt; 3. 冲刺阶段&lt;/h4&gt;
&lt;h5 id=&#34;10月-11月-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10月-11月-2&#34;&gt;#&lt;/a&gt; 10 月 - 11 月&lt;/h5&gt;
&lt;p&gt;王道《历年真题解析》+ 历年真题视频&lt;/p&gt;
&lt;p&gt;重刷王道错题&lt;/p&gt;
&lt;h5 id=&#34;12月-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12月-2&#34;&gt;#&lt;/a&gt; 12 月&lt;/h5&gt;
&lt;p&gt;王道《模拟题》+ 模拟题视频&lt;/p&gt;
</content>
        <category term="考研" scheme="https://zengshengli775.gitee.io/categories/%E8%80%83%E7%A0%94/" />
        <category term="考研资料" scheme="https://zengshengli775.gitee.io/tags/%E8%80%83%E7%A0%94%E8%B5%84%E6%96%99/" />
        <category term="考研规划" scheme="https://zengshengli775.gitee.io/tags/%E8%80%83%E7%A0%94%E8%A7%84%E5%88%92/" />
        <updated>2021-08-13T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/13/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/Macbookpro%E6%81%A2%E5%A4%8D%E5%A4%B1%E7%81%B5%E7%9A%84Type-c%E6%8E%A5%E5%8F%A3/</id>
        <title>Macbookpro恢复失灵的Type-c接口</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/13/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/Macbookpro%E6%81%A2%E5%A4%8D%E5%A4%B1%E7%81%B5%E7%9A%84Type-c%E6%8E%A5%E5%8F%A3/"/>
        <content type="html">&lt;p&gt;最近 Macbook Pro 的一个 Type-c 接口失灵了，从网上找到一个方法解决了。&lt;/p&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;1. 关机&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;2. 按下键盘右侧的 Shift 键，左侧的 Control 和 Option 键不放。此时电脑会开机，等进入显示白 	 条的状态，不要松开手，同时按下电源按钮 10 秒钟。此时电脑将关闭。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;3. 松开所有按键&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;4. 等待 10 秒钟，重新启动电脑&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;只试过用 &lt;code&gt;右侧的Shift+Control+Option&lt;/code&gt; ，没有试过用 &lt;code&gt;左侧的Shift+Control+Option&lt;/code&gt; ，据说不能成功&lt;/p&gt;
</content>
        <category term="实用技巧" scheme="https://zengshengli775.gitee.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/" />
        <category term="Mac" scheme="https://zengshengli775.gitee.io/tags/Mac/" />
        <updated>2021-08-12T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/12/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/Python%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
        <title>Python基础知识</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/12/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/Python%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
        <content type="html">&lt;h2 id=&#34;标识符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#标识符&#34;&gt;#&lt;/a&gt; 标识符&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;字母、下划线、数字&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;区分大小写&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;字符串&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串&#34;&gt;#&lt;/a&gt; 字符串&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;string&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 首字母大写&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string&#34;&gt;&#34;srring1&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;string2&#34;&lt;/span&gt; 字符串拼接&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\tPython&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; \t为Table键&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;C\nPython&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; \n为换行符&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;C&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Python&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; &#34;&lt;/span&gt;为以&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;为间隔&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;string&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 删除字符串两边的空白&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;join&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sequence&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;-&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	seq &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;c&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 字符串序列&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;join&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; seq &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	以上实例输出结果如下：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	a&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;b&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;c&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;string&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;#123;0:.2f&amp;#125; &amp;#123;1:.2f&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;和&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;表示&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;函数中第一个和第二个参数&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;marked&#34;&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2f&lt;/span&gt;表示小数部分保留两位&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;数字&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数字&#34;&gt;#&lt;/a&gt; 数字&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;#123;:.2f&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 输出y为两位小数&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;start&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;end&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;gap&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 生成随机数，从start开始，end结束，以gap为间隔&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;lower&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;upper &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 输入多个值&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; x的y次方&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sqrt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; x的平方根&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pi 圆周率&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;e 自然常数&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;列表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#列表&#34;&gt;#&lt;/a&gt; 列表&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;序列从&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;开始&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 将元素添加到列表末尾&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;insert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;索引，值&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 将元素添加到列表任意位置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; string&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;索引&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 删除列表中元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;索引&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 删除列表元素（默认是末尾）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;6&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 列表推导式&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remove&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;值&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 删除列表值&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sort&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 列表永久排序 reverse&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;为与字母顺序相反的顺序排序&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 列表临时排序&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reverse&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 反转列表顺序&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 确定列表长度&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Test2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Test1&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 复制列表&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;元组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#元组&#34;&gt;#&lt;/a&gt; 元组&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;tup&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Google&lt;span class=&#34;token string&#34;&gt;&#39;, &#39;&lt;/span&gt;Runoo&lt;span class=&#34;token string&#34;&gt;b&#39;, &#39;&lt;/span&gt;Taobao&lt;span class=&#34;token string&#34;&gt;&#39;, &#39;&lt;/span&gt;Wiki&lt;span class=&#34;token string&#34;&gt;&#39;, &#39;&lt;/span&gt;Weibo&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;Weixin&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; tup 删除元组&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;tup3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tup1 &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; tup2 元组不能修改、删除元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;tup&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;集合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集合&#34;&gt;#&lt;/a&gt; 集合&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 创建集合&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;orange&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;pear&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;orange&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;banana&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; 集合是无序的&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; x &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 添加元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remove&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; x &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 移除元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;discard&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; x &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 移除集合中的元素，且如果元素不存在，不会发生错误&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 随机删除集合中的一个元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 计算集合 s 元素个数&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clear&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 清空集合&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;字典&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字典&#34;&gt;#&lt;/a&gt; 字典&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Class&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;First&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 访问字典里的值&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt; 修改字典&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 删除键 &lt;span class=&#34;token string&#34;&gt;&#39;Name&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clear&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 清空字典&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt; 删除字典&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;迭代器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#迭代器&#34;&gt;#&lt;/a&gt; 迭代器&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;迭代器有两个基本的方法：&lt;span class=&#34;token builtin&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 和 &lt;span class=&#34;token builtin&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; it &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;# 创建迭代器对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;it&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# 输出迭代器的下一个元素&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;it&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;把一个类作为一个迭代器使用需要在类中实现两个方法 __iter__&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 与 __next__&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyNumbers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__iter__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; self&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__next__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; x&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;raise&lt;/span&gt; StopIteration &lt;span class=&#34;token comment&#34;&gt;#StopIteration 异常用于标识迭代的完成，防止出现无限循环的情况	&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;myclass &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; MyNumbers&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;myiter &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;myclass&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; myiter&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​&lt;/p&gt;
&lt;h2 id=&#34;生成器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生成器&#34;&gt;#&lt;/a&gt; 生成器&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;在 Python 中，使用了 &lt;span class=&#34;token keyword&#34;&gt;yield&lt;/span&gt; 的函数被称为生成器（generator）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;使用 &lt;span class=&#34;token keyword&#34;&gt;yield&lt;/span&gt; 实现斐波那契数列&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fibonacci&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 生成器函数 - 斐波那契&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; counter &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;counter &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;yield&lt;/span&gt; a&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; b&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		counter &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; fibonacci&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# f 是一个迭代器，由生成器返回生成&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;f&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; StopIteration&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​&lt;/p&gt;
&lt;h2 id=&#34;函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#函数&#34;&gt;#&lt;/a&gt; 函数&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;python 使用 &lt;span class=&#34;token keyword&#34;&gt;lambda&lt;/span&gt; 来创建匿名函数&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 可写函数说明&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;lambda&lt;/span&gt; arg1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; arg2&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; arg1 &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; arg2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 调用 sum 函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;相加后的值为 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;相加后的值为 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;不定长参数 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件&#34;&gt;#&lt;/a&gt; 文件&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Python.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;rt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 以文本方式打开文件&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;第一个字母r表示操作，第二个字母t表示文件类型&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 关闭文件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;readline&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 读取整行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 将字符串写入文件，返回的是写入的字符长度&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模块&#34;&gt;#&lt;/a&gt; 模块&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;##plotly 模块&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 创建 data frame&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;df &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; timesData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iloc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# import graph objects as &#34;go&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; plotly&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;graph_objs &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; go&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 设置第一条折线 trace1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# go.Scatter 可以创建一个散点图或者折线图的对象，我们将其命名为 trace1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;trace1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; go&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Scatter&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; df&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;world_rank&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# 定义坐标轴的映射关系，将 world_rank 这一列作为 x 轴&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; df&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;citations&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;# 同理，将 citations 这一列作为 y 轴&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    mode &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;lines&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;# 我们要绘制折线图，所以将 mode 设置为 “lines”&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;citations&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 将这条折线命名为 citations&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    marker &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;rgba(16, 112, 2, 0.8)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;# maker 用来定义点的性质，如颜色、大小等&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; df&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;university_name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;# 将 university_name 一列设置为悬停文本（鼠标悬停在图片上方显示的内容）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 设置第二条折线 trace2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;trace2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; go&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Scatter&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; df&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;world_rank&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; df&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;teaching&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    mode &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;lines+markers&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#绘制的折线图由散点连接而成，即 lines+markers&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;teaching&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    marker &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;rgba(80, 26, 80, 0.8)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; df&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;university_name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;trace1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; trace2&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 添加图层 layout&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;layout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;title &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Citation and Teaching vs World Rank of Top 100 Universities&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              &lt;span class=&#34;token comment&#34;&gt;# 设置图像的标题&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              xaxis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;title&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;World Rank&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;ticklen&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;zeroline&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              &lt;span class=&#34;token comment&#34;&gt;# 设置 x 轴名称，x 轴刻度线的长度，不显示零线&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;             &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 将 data 与 layout 组合为一个图像&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;fig &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; layout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; layout&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 绘制图像&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;iplot&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fig&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​&lt;/p&gt;
&lt;h2 id=&#34;类和对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类和对象&#34;&gt;#&lt;/a&gt; 类和对象&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#创建类&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ClassName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token string&#34;&gt;&#39;类的帮助信息&#39;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;#类文档字符串&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   class_suite  &lt;span class=&#34;token comment&#34;&gt;#类体，class_suite 由类成员，方法，数据属性组成。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#创建实例对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token string&#34;&gt;&#39;所有员工的基类&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   empCount &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; salary&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#构造方法，用于创建对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; name &lt;span class=&#34;token comment&#34;&gt;#定义成员变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;salary &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; salary&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Employee&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;empCount &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;displayCount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Total Employee %d&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; Employee&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;empCount&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;displayEmployee&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Name : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token string&#34;&gt;&#34;, Salary: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;salary&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string&#34;&gt;&#34;创建 Employee 类的第一个对象&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;emp1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Employee&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Zara&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string&#34;&gt;&#34;创建 Employee 类的第二个对象&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;emp2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Employee&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Manni&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;emp1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;displayEmployee&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;emp2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;displayEmployee&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Total Employee %d&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; Employee&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;empCount&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#访问属性&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## 您可以使用点号。来访问对象的属性 对象名。成员名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;emp1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;displayEmployee&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;emp2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;displayEmployee&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Total Employee %d&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; Employee&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;empCount&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="编程基础" scheme="https://zengshengli775.gitee.io/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/" />
        <category term="Python" scheme="https://zengshengli775.gitee.io/tags/Python/" />
        <updated>2021-08-11T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/11/%E5%8D%9A%E5%AE%A2/%E8%BD%AC%E8%BD%BD%E5%8D%9A%E5%AE%A2%E6%96%B9%E6%B3%95/</id>
        <title>转载博客方法</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/11/%E5%8D%9A%E5%AE%A2/%E8%BD%AC%E8%BD%BD%E5%8D%9A%E5%AE%A2%E6%96%B9%E6%B3%95/"/>
        <content type="html">&lt;h2 id=&#34;原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理&#34;&gt;#&lt;/a&gt; 原理&lt;/h2&gt;
&lt;p&gt;利用 Markdown 能够解析 html 的特色（csdn 编辑模式里能够修改，文章里也有），咱们只要在开发者模式中，将须要转载的人的博客地址的文章部分的 div 块整个复制下来就好了。&lt;/p&gt;
&lt;h2 id=&#34;步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#步骤&#34;&gt;#&lt;/a&gt; 步骤&lt;/h2&gt;
&lt;p&gt;1. &lt;code&gt;option+command+I&lt;/code&gt;  打开浏览器开发者模式&lt;/p&gt;
&lt;p&gt;2. 在 Elements 中浏览相应的 html 结构，找到例如 &lt;code&gt;&amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;&lt;/code&gt;  或者  &lt;code&gt;&amp;lt;div class = &amp;quot;article_content&amp;quot;&amp;gt;&lt;/code&gt;  的 div 块&lt;/p&gt;
&lt;p&gt;3. 右键单击这个 div 块，而后选择 &lt;code&gt;Copy-&amp;gt;copy element&lt;/code&gt; ，就可以将这个块内的元素所有提取下来啦。&lt;/p&gt;
&lt;p&gt;4. 接下来的事情就是转回本身的博客，使用 markdown 编辑器，将元素复制进来，然后导出。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29sLmx1L21hcmtkb3duLw==&#34;&gt;html 转 markdown&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="博客" scheme="https://zengshengli775.gitee.io/categories/%E5%8D%9A%E5%AE%A2/" />
        <category term="博客" scheme="https://zengshengli775.gitee.io/tags/%E5%8D%9A%E5%AE%A2/" />
        <category term="Markdown" scheme="https://zengshengli775.gitee.io/tags/Markdown/" />
        <updated>2021-08-11T08:42:01.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/11/%E5%AF%BC%E8%88%AA/%E5%AF%BC%E8%88%AA/</id>
        <title>导航</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/11/%E5%AF%BC%E8%88%AA/%E5%AF%BC%E8%88%AA/"/>
        <content type="html">&lt;h2 id=&#34;导航&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#导航&#34;&gt;#&lt;/a&gt; 导航&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5naXRuYXZpLmNvbS8=&#34;&gt;judasn 专属导航 - GitNavi - Sharing All The World&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hZHpocC5jbi8=&#34;&gt;爱达杂货铺 | 收集那些有用的东西 | 爱达导航&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuemhhbnNvdXNvdS5jb20vbWluaQ==&#34;&gt;让导航更简洁一点 - 站搜搜&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2lseGRoLmNvbS9jYXQvMTcz&#34;&gt;龙轩导航 - 做个有用的导航&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaXRlLnNjaXBpbmcuY29tLw==&#34;&gt;科塔学术导航 - 最专业、准确、及时和全面的科研与学术资源导航平台&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueHVlOG5hdi5jb20v&#34;&gt;学吧导航 | 四十万学习爱好者都在用的学习导航网站&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="导航" scheme="https://zengshengli775.gitee.io/categories/%E5%AF%BC%E8%88%AA/" />
        <category term="导航" scheme="https://zengshengli775.gitee.io/tags/%E5%AF%BC%E8%88%AA/" />
        <updated>2021-08-11T07:52:30.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/11/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</id>
        <title>编程学习资料</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/11/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
        <content type="html">&lt;h2 id=&#34;markdown&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#markdown&#34;&gt;#&lt;/a&gt; Markdown&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9tYXJrZG93bi9tZC10dXRvcmlhbC5odG1s&#34;&gt;菜鸟教程 - Markdown 教程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29sLmx1Lw==&#34;&gt;在线工具牌在线工具&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;编程练习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编程练习&#34;&gt;#&lt;/a&gt; 编程练习&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXNldC9hbGwvP2RpZmZpY3VsdHk9JUU3JUFFJTgwJUU1JThEJTk1&#34;&gt;「简单」题目合集 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9waW50aWEuY24vcHJvYmxlbS1zZXRzP3RhYj0w&#34;&gt;PAT&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lZGFiaXQuY29tL2NoYWxsZW5nZXM=&#34;&gt;10,000+ Coding Practice Challenges // Edabit&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92aXN1YWxnby5uZXQvZW4=&#34;&gt;VisuAlgo - 通过动画可视化数据结构和算法&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;matlab&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#matlab&#34;&gt;#&lt;/a&gt; Matlab&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25jZXB1X2NoZW4vY2F0ZWdvcnlfODk2MzMzNi5odG1s&#34;&gt;MATLAB 学习笔记_ncepu_Chen 的博客 - CSDN 博客&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JzanNvc29zb3NvL2NhdGVnb3J5Xzk3MzI0NjIuaHRtbA==&#34;&gt;MATLAB_bsjsosososo 的博客_这么大个圈圈 - CSDN 博客&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法&#34;&gt;#&lt;/a&gt; 算法&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTM0ODY0MTQvYXJ0aWNsZS9kZXRhaWxzLzEwMjk2MTE3MQ==&#34;&gt;刷了几千道算法题，这些我私藏的刷题网站都在这里了！_Rocky0429-CSDN 博客_算法刷题网站&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="编程基础" scheme="https://zengshengli775.gitee.io/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/" />
        <category term="编程工具" scheme="https://zengshengli775.gitee.io/tags/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/" />
        <category term="编程学习资料" scheme="https://zengshengli775.gitee.io/tags/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/" />
        <updated>2021-08-11T07:11:15.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/11/%E6%9C%9F%E6%9C%AB/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/</id>
        <title>期末复习资料</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/11/%E6%9C%9F%E6%9C%AB/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/"/>
        <content type="html">&lt;h2 id=&#34;期末复习资料&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#期末复习资料&#34;&gt;#&lt;/a&gt; 期末复习资料&lt;/h2&gt;
&lt;h3 id=&#34;数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据结构&#34;&gt;#&lt;/a&gt; 数据结构&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zMDgxNDMyOS9hcnRpY2xlL2RldGFpbHMvOTQ5MzQ5MDM/Yml6X2lkPTEwMiZhbXA7dXRtX3Rlcm09JUU2JTk1JUIwJUU2JThEJUFFJUU3JUJCJTkzJUU2JTlFJTg0YyVFOCVBRiVBRCVFOCVBOCU4MCVFNyU4OSU4OCZhbXA7dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3NlYXJjaF9yZXN1bHQubm9uZS10YXNrLWJsb2ctMn5ibG9nfnNvYmFpZHV3ZWJ+ZGVmYXVsdC0xLTk0OTM0OTAzJmFtcDtzcG09MTAxOC4yMTE4LjMwMDEuNDE4Nw==&#34;&gt;数据结构（c 语言版）代码_weixin_30814329 的博客 - CSDN 博客&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTIzMDk2L2FydGljbGUvZGV0YWlscy84NjU2MDU3MD9vcHNfcmVxdWVzdF9taXNjPSUyNTdCJTI1MjJyZXF1ZXN0JTI1NUZpZCUyNTIyJTI1M0ElMjUyMjE2MDA2ODkwMjAxOTcyNTIyMjQ1NTAwNyUyNTIyJTI1MkMlMjUyMnNjbSUyNTIyJTI1M0ElMjUyMjIwMTQwNzEzLjEzMDEwMjMzNC4uJTI1MjIlMjU3RCZhbXA7cmVxdWVzdF9pZD0xNjAwNjg5MDIwMTk3MjUyMjI0NTUwMDcmYW1wO2Jpel9pZD0wJmFtcDt1dG1fbWVkaXVtPWRpc3RyaWJ1dGUucGNfc2VhcmNoX3Jlc3VsdC5ub25lLXRhc2stYmxvZy0yfmJsb2d+Zmlyc3RfcmFua192MX5yYW5rX2Jsb2dfdjEtMi04NjU2MDU3MC5wY192MV9yYW5rX2Jsb2dfdjEmYW1wO3V0bV90ZXJtPSVFNiU5NSVCMCVFNiU4RCVBRSVFNyVCQiU5MyVFNiU5RSU4NGMlRTglQUYlQUQlRTglQTglODAlRTclODklODgmYW1wO3NwbT0xMDE4LjIxMTguMzAwMS40MTg3&#34;&gt;《数据结构》C 语言版 (清华严蔚敏考研版） 全书知识梳理_22 26 25 的博客 - CSDN 博客&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3R5dXN0bGkvY2F0ZWdvcnlfODU4MzcxMi5odG1s&#34;&gt;数据结构_tyustli 的博客 - CSDN 博客&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2dpczRnLnBrdS5lZHUuY24vY291cnNlL3B5dGhvbmRzLyMlRTglQUYlQkUlRTclQTglOEIlRTYlOTUlOTklRTYlOUQlOTA=&#34;&gt;数据结构与算法 2020 春季 – 北京大学新一代 GIS 研究室&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdTE3MjM0MDUwL2FydGljbGUvZGV0YWlscy8xMDY3NDcwNDAjJUU2JUIzJUE4JUU2JTg0JThGMjYlRUYlQkMlOUElRTUlOTMlODglRTUlQTQlQUIlRTYlOUIlQkMlRTUlQjglQTYlRTYlOUQlODMlRTglQjclQUYlRTUlQkUlODQlRTklOTUlQkYlRTUlQkElQTY=&#34;&gt;数据结构 ——【十五套卷子】考前题型归纳整理_雨花石流星雨的博客 - CSDN 博客&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2thbmdqaWFud2VpL0RhdGEtU3RydWN0dXJl&#34;&gt;《数据结构》- 严蔚敏。吴伟民 - 教材源码与习题解析&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20va2FuZ2ppYW53ZWkxMDEvcC81MjIxODE2Lmh0bWw=&#34;&gt;《数据结构 - C 语言版》（严蔚敏，吴伟民版）课本源码 + 习题集解析使用说明 - 康建伟 - 博客园&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;统计计算&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#统计计算&#34;&gt;#&lt;/a&gt; 统计计算&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1NtaXJrQ2FvL0xpaGFuZw==&#34;&gt;统计学习方法&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;期末速成视频&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#期末速成视频&#34;&gt;#&lt;/a&gt; 期末速成视频&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudGVjaGZlbnMuY29tL3Bvc3RzL2J1Z3Vha2UuaHRtbA==&#34;&gt;【高数叔 + 猴博士 + 高斯课堂 + 斐多课堂】大学不挂科速成课全系列视频 | TechFen&#39;s Blog&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueHVlZGJsLmNvbS9kYXh1ZWtlY2hlbmcvcWltb3N1Y2hlbmdrZQ==&#34;&gt;期末复习速成课 - 学道部落&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;数字信号处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数字信号处理&#34;&gt;#&lt;/a&gt; 数字信号处理&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcHBncWUyeDhwODU0MzUuaDUueGlhb2Vrbm93LmNvbS92MS9nb29kcy9nb29kc19kZXRhaWwvcF82MDkxMWVjMGU0YjA5ODkwZjBlOTA0NjE/dHlwZT0z&#34;&gt;4 小时从零基础学完数字信号处理【LYJ】&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;数据库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库&#34;&gt;#&lt;/a&gt; 数据库&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hjYmJ0L2FydGljbGUvZGV0YWlscy8xODE1OTkzMz9vcHNfcmVxdWVzdF9taXNjPSUyNTdCJTI1MjJyZXF1ZXN0JTI1NUZpZCUyNTIyJTI1M0ElMjUyMjE2MjIxMDM2MzAxNjc4MDI2NDA5MDk3NiUyNTIyJTI1MkMlMjUyMnNjbSUyNTIyJTI1M0ElMjUyMjIwMTQwNzEzLjEzMDEwMjMzNC4uJTI1MjIlMjU3RCZhbXA7cmVxdWVzdF9pZD0xNjIyMTAzNjMwMTY3ODAyNjQwOTA5NzYmYW1wO2Jpel9pZD0wJmFtcDt1dG1fbWVkaXVtPWRpc3RyaWJ1dGUucGNfc2VhcmNoX3Jlc3VsdC5ub25lLXRhc2stYmxvZy0yfmFsbH5zb2JhaWR1ZW5kfmRlZmF1bHQtMS0xODE1OTkzMy5maXJzdF9yYW5rX3YyX3BjX3JhbmtfdjI5JmFtcDt1dG1fdGVybT0lRTYlOTUlQjAlRTYlOEQlQUUlRTUlQkElOTMlRTclQjMlQkIlRTclQkIlOUYlRTYlQTYlODIlRTglQUUlQkElRTclQUMlOTQlRTglQUUlQjAmYW1wO3NwbT0xMDE4LjIyMjYuMzAwMS40MTg3&#34;&gt;《数据库系统概论》复习笔记_水果君の日常 - CSDN 博客_数据库系统概论笔记&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;四六级&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四六级&#34;&gt;#&lt;/a&gt; 四六级&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYW4udXZvb2MuY29tL0xlYXJuL0NFVC9DRVQ2Lw==&#34;&gt;友沃可云 - 在线云文件&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="期末" scheme="https://zengshengli775.gitee.io/categories/%E6%9C%9F%E6%9C%AB/" />
        <category term="期末复习" scheme="https://zengshengli775.gitee.io/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/" />
        <updated>2021-08-11T06:55:17.000Z</updated>
    </entry>
    <entry>
        <id>https://zengshengli775.gitee.io/2021/08/11/%E8%BD%AF%E4%BB%B6/%E8%BD%AF%E4%BB%B6%E7%BD%91%E7%AB%99%E6%B1%87%E6%80%BB/</id>
        <title>软件网站汇总</title>
        <link rel="alternate" href="https://zengshengli775.gitee.io/2021/08/11/%E8%BD%AF%E4%BB%B6/%E8%BD%AF%E4%BB%B6%E7%BD%91%E7%AB%99%E6%B1%87%E6%80%BB/"/>
        <content type="html">&lt;h2 id=&#34;软件网站汇总&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件网站汇总&#34;&gt;#&lt;/a&gt; 软件网站汇总&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3RpZmFsb2NraGFydC55czE2OC5jb20v&#34;&gt;Tifalockhart&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9heHV0b25neHVlLmNvbS8=&#34;&gt;阿虚同学的储物间&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tYWMucXEuY29tLz9mcm9tPXBjcXE=&#34;&gt;腾讯 Mac 软件中心&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tb29jMS5jaGFveGluZy5jb20venQvMjAxNzIzMzkzLmh0bWw=&#34;&gt;阿虚的 FQ 教程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWFjd2suY29tLw==&#34;&gt;MacWk - 精品 mac 软件下载&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWFjYmwuY29tLw==&#34;&gt;马可菠萝 - 分享你喜欢的 MAC 应用&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZGlnaXQ3Ny5jb20v&#34;&gt;Digit77.com | 海量精品 Mac 应用免费分享&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuNTJwb2ppZS5jbi8=&#34;&gt;吾爱破解 &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWRpZGkuY29tLw==&#34;&gt;零度解说 – FreeDiDi&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jYW5nc2h1aS5uZXQv&#34;&gt;沧水的博客 – 网页制作 | 运维开发 | 游戏娱乐 | 资源分享 | 生活随写&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly8za2xhLmNuLw==&#34;&gt;3 克拉&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3ljaXQueXMxNjguY29tLw==&#34;&gt;8791 的空间&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVubmluZ2NoZWVzZS5jb20v&#34;&gt;奔跑中的奶酪 - 有智，有趣，有爱&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3otc21zLmNvbS8=&#34;&gt;在线云短信网页版 - 免费接码平台【官网】&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuemhhb2ppYW9iZW4uY24v&#34;&gt;找脚本 —— 找任何你需要的脚本&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubmFvZGFpLm9yZy8=&#34;&gt;脑袋瓜子&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90bWlvZS5jb20v&#34;&gt;ZAPRO・杂铺 | 发现美好，分享快乐！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tc2RuLml0ZWxseW91LmNuLw==&#34;&gt;MSDN, 我告诉你&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="软件" scheme="https://zengshengli775.gitee.io/categories/%E8%BD%AF%E4%BB%B6/" />
        <category term="软件网站" scheme="https://zengshengli775.gitee.io/tags/%E8%BD%AF%E4%BB%B6%E7%BD%91%E7%AB%99/" />
        <updated>2021-08-11T04:28:34.000Z</updated>
    </entry>
</feed>
